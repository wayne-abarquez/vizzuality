<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="874" height="276"
	styleName="dataDownloadContainer" backgroundSize="100%"
	xmlns:maps="com.google.maps.*" verticalScrollPolicy="off" horizontalScrollPolicy="off"
	creationComplete="init()" xmlns:itemrenders="org.vizzuality.view.pendingtasks.itemrenders.*" xmlns:pendingtasks="org.vizzuality.view.pendingtasks.*" xmlns:components="org.vizzuality.components.*">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import org.vizzuality.view.pendingtasks.itemrenders.ProtectedAreaItem;
			import org.vizzuality.events.TaskSelectionEvent;
			import org.vizzuality.events.MyEventDispatcher;
			import org.vizzuality.model.ReviewProcess;
			import com.adobe.serialization.json.JSON;
			import org.vizzuality.model.Pa;
			import mx.rpc.events.ResultEvent;
			import mx.core.Application;
			import com.asual.swfaddress.SWFAddress;
			import org.vizzuality.model.Task;
			import mx.collections.ArrayCollection;
			import resource.Resource;
			
			
			[Bindable] private var newPage:Number=1;
			[Bindable] private var totalNewPages:Number=1;
			[Bindable] private var delPage:Number=1;
			[Bindable] private var totalDelPages:Number=1;
			[Bindable] private var updatePage:Number=1;
			[Bindable] private var totalUpdatesPages:Number=1;
			[Bindable] private var totalDeleted:Number=0;
			[Bindable] private var totalUpdated:Number=0;
			[Bindable] private var totalNew:Number=0;
			
			[Bindable]private var deleted: ArrayCollection = new ArrayCollection();
			[Bindable]private var news: ArrayCollection = new ArrayCollection();
			[Bindable]private var updates: ArrayCollection = new ArrayCollection();
			
			[Bindable]private var mergeArray: ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _task:Task;
			
			[Bindable]
			public var review:ReviewProcess = new ReviewProcess();
			
			
			public function set task(val:Task):void {
				_task=val;
				//Get the details of the task
				refreshData();
			}
			
			public function refreshData():void {
				
				this.height = 276;
				Application.application.viewsContainer.myViewStack.height = 300;
				
				getTaskDeletions(1);
				getTaskNewPas(1);
				getTaskUpdates(1);
				
			}
			
			public function get task():Task {
				return _task;
			}
			
			private function init():void {
				MyEventDispatcher.addEventListener(TaskSelectionEvent.PA_CONFIRMED,onPaConfirmed);
				MyEventDispatcher.addEventListener(TaskSelectionEvent.PA_REJECTED,onPaRejected);
			}
			
			private function onPaConfirmed(event:TaskSelectionEvent):void {
				review.addPa(event.mode,event.pa,ReviewProcess.CONFIRMED);
			}
			private function onPaRejected(event:TaskSelectionEvent):void {
				review.addPa(event.mode,event.pa,ReviewProcess.REJECTED);	
			}
			
			
			
			private function getTaskDeletions(p:Number):void {
				deletedBox.currentState="loading";
				jsonService1.url = Application.application.serverUrl + "/exports/"+_task.id+"/imports/"+_task.importId+"/protected_areas?state=deleted&page="+p+"&per_page=12";
				jsonService1.send();		
				delPage=p;						
			}
			private function getTaskNewPas(p:Number):void {
				newBox.currentState="loading";
				jsonService2.url = Application.application.serverUrl + "/exports/"+_task.id+"/imports/"+_task.importId+"/protected_areas?state=added&page="+p+"&per_page=12";
				jsonService2.send();		
				newPage=p;						
				
			}
			private function getTaskUpdates(p:Number):void {
				updatedBox.currentState="loading";
				jsonService3.url = Application.application.serverUrl + "/exports/"+_task.id+"/imports/"+_task.importId+"/protected_areas?state=changed&page="+p+"&per_page=12";
				jsonService3.send();		
				updatePage=p;						
				
			}

			
			
			private function onGetTaskDeletionsResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				var ind:Number = 0;
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.ind=ind;
					pa.status = review.getIfPaIdInReview(pa.id,ReviewProcess.DELETE);
					tem.push(pa);	
					ind++;		
				}
				
/* 				for(var numtemp:Number=1;numtemp<=12;numtemp++) {
					var pa1:Pa = new Pa();
					pa1.id=numtemp.toString();
					pa1.name="test "+ numtemp;
					pa1.country="spain";
					pa1.ind = numtemp-1;
					pa1.status="";
					tem.push(pa1);
				}	 */
						
				
				deleted=new ArrayCollection(tem);
				totalDeleted=res.total;
				totalDelPages = Math.ceil(totalDeleted/12);		
				
				review.deletedPending = totalDeleted-review.deletedReviewed;
				review.recalculatePendings();
				deletedBox.currentState="";
				
				//Change the Size of the screen depending on this
				if(tem.length>0) {
					this.height=this.height +deletedBox.height;
					Application.application.viewsContainer.myViewStack.height=
						Application.application.viewsContainer.myViewStack.height +deletedBox.height;
				}
							
			}
			private function onGetTaskNewPasResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				var ind:Number = 0;
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.ind=ind;
					pa.status = review.getIfPaIdInReview(pa.id,ReviewProcess.CREATE);
					tem.push(pa);
					ind++;
				}
				
/* 				for(var numtemp:Number=1;numtemp<=12;numtemp++) {
					var pa2:Pa = new Pa();
					pa2.id=numtemp.toString();
					pa2.name="test "+ numtemp;
					pa2.country="spain";
					pa2.status="";
					pa2.ind = numtemp-1;
					tem.push(pa2);
				}		 */

				
				news=new ArrayCollection(tem);
				totalNew=res.total;
				totalNewPages = Math.ceil(totalNew/12);			
				
					
				review.newPending = totalNew-review.newReviewed;
				review.recalculatePendings();	
				newBox.currentState="";
				
				//Change the Size of the screen depending on this
				if(tem.length>0) {
					this.height=this.height + newBox.height;		
					Application.application.viewsContainer.myViewStack.height=
						Application.application.viewsContainer.myViewStack.height +newBox.height;
				}		
								
			}
			private function onGetTaskUpdatesResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				var ind:Number = 0;
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.ind=ind;
					pa.status = review.getIfPaIdInReview(pa.id,ReviewProcess.UPDATE);
					tem.push(pa);
					ind++;
				}
				

/* 				for(var numtemp:Number=1;numtemp<=11;numtemp++) {
					var pa3:Pa = new Pa();
					pa3.id=numtemp.toString();
					pa3.name="test "+ numtemp;
					pa3.country="spain";
					pa3.status="";
					pa3.ind = numtemp;
					tem.push(pa3);
				} */

				
				updates=new ArrayCollection(tem);
				totalUpdated=res.total;
				totalUpdatesPages = Math.ceil(totalUpdated/12);						

				review.editedPending = totalUpdated-review.editedReviewed;
				review.recalculatePendings();	
				updatedBox.currentState="";
				
				
				//Change the Size of the screen depending on this
				if(tem.length>0) {
					this.height=this.height + updatedBox.height;			
					Application.application.viewsContainer.myViewStack.height=
						Application.application.viewsContainer.myViewStack.height + updatedBox.height;
					//trace(this.height);		
				}
				
			}
			
			
			private function commitChanges():void {
				jsonServiceCommit.url = Application.application.serverUrl + "/exports/"+task.id+"/imports/" + task.importId +'/protected_areas/update_all';
				var params:Object={};
				params.taskCode = task.code;
				var dels:Array = [];
				for each(var pa:Pa in review.pasDeletedReviewed) {
					dels.push(pa.id+","+pa.status);
				}
				params["deleted[]"]=dels;
				var added:Array = [];
				for each(var pa2:Pa in review.pasNewReviewed) {
					added.push(pa2.id+","+pa2.status);
				}
				params["added[]"]=added;
				var updated:Array = [];
				for each(var pa3:Pa in review.pasEditedReviewed) {
					updated.push(pa3.id+","+pa3.status);
				}
				params["changed[]"]=updated;
				jsonServiceCommit.send(params);		

				
			}
			
			
			private function onCommitResult(event:ResultEvent):void {
				//Create a new ReviewProcess
				review=new ReviewProcess();
				refreshData();
			}
			
			
		]]>
	</mx:Script>
	
	
	<mx:Label text="All tasks" fontFamily="Helvetica" fontWeight="bold" fontSize="12" color="#336699" left="14" top="17"
		 useHandCursor="true" mouseChildren="false" buttonMode="true" click="SWFAddress.setValue('/rec/pendingtasks')"/>
	<mx:HBox left="13" top="30" verticalAlign="bottom" horizontalGap="0" width="841">
		<mx:Label text="{'Review data and confirm ('+review.totalPending+' pas) ' + ' - ' + _task.description + ' (wdpa_'+_task.code+'_export.zip)'}" fontFamily="Helvetica" fontWeight="bold" fontSize="20" color="#666666" left="14" top="35" letterSpacing="-1"/>
	</mx:HBox>
	
	<mx:VBox top="80" right="17" verticalGap="0" borderStyle="solid" borderThickness="0" cornerRadius="0" width="210">
		<mx:Canvas height="33" borderStyle="none" color="#FFFFFF" top="0" left="0" right="0" width="100%" styleName="darkHeader" backgroundSize="100%">
			<mx:Label text="Changes overview" fontSize="16" fontWeight="bold" fontFamily="Helvetica" top="7" bottom="7" letterSpacing="-1" right="69" width="129"/>
		</mx:Canvas>
		<mx:VBox verticalGap="0" width="100%" backgroundColor="#FFFFFF" paddingBottom="4" paddingTop="4">
			<itemrenders:MergeOverviewItem type="Deleted" total="{totalDeleted}" color="#ff3300" pending="{review.deletedPending}" />
			<itemrenders:MergeOverviewItem type="New" total="{totalNew}" color="#339900" pending="{review.newPending}" />
			<itemrenders:MergeOverviewItem type="Modified" total="{totalUpdated}" color="#336699" pending="{review.editedPending}" />
		</mx:VBox>
		<mx:Canvas height="33" borderStyle="none" color="#333333" top="0" left="0" right="0" width="100%" styleName="softGreyBottom" backgroundSize="100%">
			<components:ShadowButton label="COMMIT CHANGES" click="commitChanges()" enabled="{review.totalReviewed>0}" 
				verticalCenter="-1" right="5" width="128" letterSpacing="0" useHandCursor="true" mouseChildren="false" buttonMode="true" styleName="greenButton"/>
		</mx:Canvas>		
	</mx:VBox>
    
	<mx:Canvas backgroundColor="#FFFFFF" left="0" right="225" top="62" bottom="10" id="tasksOverviewCanvas">
		<mx:VBox left="15" right="15" top="15">
			<pendingtasks:EditUpdateNewBox id="deletedBox" includeInLayout="{deleted.length>0}" visible="{deleted.length>0}" 
				getNewData="{getTaskDeletions}" total="{totalDeleted}" totalPages="{totalDelPages}" pendingItems="{review.deletedPending}"
				typeBox="Deleted" mode="{ReviewProcess.DELETE}" page="{delPage}" dataAc="{deleted}" styleUp="softRedUp" styleDown="softRedBottom" />
			<pendingtasks:EditUpdateNewBox id="newBox"  includeInLayout="{news.length>0}" visible="{news.length>0}"
				getNewData="{getTaskNewPas}" total="{totalNew}" totalPages="{totalNewPages}"  pendingItems="{review.newPending}"
				typeBox="New" mode="{ReviewProcess.CREATE}" page="{newPage}" dataAc="{news}" styleUp="softGreenUp" styleDown="softGreenBottom" />
			<pendingtasks:EditUpdateNewBox id="updatedBox"  includeInLayout="{updates.length>0}" visible="{updates.length>0}"
				getNewData="{getTaskUpdates}" total="{totalUpdated}" totalPages="{totalUpdatesPages}" pendingItems="{review.editedPending}"
				typeBox="Modified" mode="{ReviewProcess.UPDATE}" page="{updatePage}" dataAc="{updates}" styleUp="softBlueUp" styleDown="softBlueBottom"  />
	    </mx:VBox>
	</mx:Canvas>
	<mx:Canvas x="648" y="53" width="18" height="1107" styleName="shadow" backgroundSize="100%" />

	<mx:HTTPService id="jsonService1" resultFormat="text" method="GET" result="onGetTaskDeletionsResult(event)" fault="Alert.show('onGetTaskDeletionsResult ERROR: Please contact administrator')" />
	<mx:HTTPService id="jsonService2" resultFormat="text" method="GET" result="onGetTaskNewPasResult(event)" fault="Alert.show('onGetTaskNewPasResult ERROR: Please contact administrator')" />
	<mx:HTTPService id="jsonService3" resultFormat="text" method="GET" result="onGetTaskUpdatesResult(event)" fault="Alert.show('onGetTaskUpdatesResult ERROR: Please contact administrator')" />
	<mx:HTTPService id="jsonServiceCommit" resultFormat="text" method="POST" result="onCommitResult(event)" fault="Alert.show('onCommitResult ERROR: Please contact administrator')" />

	
</mx:Canvas>
