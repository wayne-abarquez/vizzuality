<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="874" height="950" 
	styleName="dataDownloadContainer" backgroundSize="100%"
	xmlns:maps="com.google.maps.*" verticalScrollPolicy="off" horizontalScrollPolicy="off"
	creationComplete="init()" xmlns:itemrenders="org.vizzuality.view.pendingtasks.itemrenders.*" xmlns:pendingtasks="org.vizzuality.view.pendingtasks.*">
	<mx:Script>
		<![CDATA[
			import org.vizzuality.view.pendingtasks.itemrenders.ProtectedAreaItem;
			import org.vizzuality.events.TaskSelectionEvent;
			import org.vizzuality.events.MyEventDispatcher;
			import org.vizzuality.model.ReviewProcess;
			import com.adobe.serialization.json.JSON;
			import org.vizzuality.model.Pa;
			import mx.rpc.events.ResultEvent;
			import mx.core.Application;
			import com.asual.swfaddress.SWFAddress;
			import org.vizzuality.model.Task;
			import mx.collections.ArrayCollection;
			import resource.Resource;
			
			
			[Bindable] private var newPage:Number=1;
			[Bindable] private var totalNewPages:Number=1;
			[Bindable] private var delPage:Number=1;
			[Bindable] private var totalDelPages:Number=1;
			[Bindable] private var updatePage:Number=1;
			[Bindable] private var totalUpdatesPages:Number=1;
			[Bindable] private var totalDeleted:Number=0;
			[Bindable] private var totalUpdated:Number=0;
			[Bindable] private var totalNew:Number=0;
			
			[Bindable]private var deleted: ArrayCollection = new ArrayCollection();
			[Bindable]private var news: ArrayCollection = new ArrayCollection();
			[Bindable]private var updates: ArrayCollection = new ArrayCollection();
			
			[Bindable]private var mergeArray: ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _task:Task;
			
			[Bindable]
			public var review:ReviewProcess = new ReviewProcess();
			
			
			public function set task(val:Task):void {
				_task=val;
				
				//Get the details of the task
				getTaskDeletions(1);
				getTaskNewPas(1);
				getTaskUpdates(1);
				
			}
			
			public function get task():Task {
				return _task;
			}
			
			private function init():void {
				MyEventDispatcher.addEventListener(TaskSelectionEvent.PA_CONFIRMED,onPaConfirmed);
				MyEventDispatcher.addEventListener(TaskSelectionEvent.PA_REJECTED,onPaRejected);
			}
			
			private function onPaConfirmed(event:TaskSelectionEvent):void {
				review.addPa(event.mode,event.pa,ReviewProcess.CONFIRMED)
			}
			private function onPaRejected(event:TaskSelectionEvent):void {
				review.addPa(event.mode,event.pa,ReviewProcess.REJECTED)			
			}
			
			
			private function getTaskDeletions(p:Number):void {
				jsonService1.url = Application.application.serverUrl + "/json.php/DumpServices.getTaskDeletions/"+_task.code+"/"+p+"/18";
				jsonService1.send();		
				delPage=p;						
			}
			private function getTaskNewPas(p:Number):void {
				jsonService2.url = Application.application.serverUrl + "/json.php/DumpServices.getTaskNewPas/"+_task.code+"/"+p+"/18";
				jsonService2.send();		
				newPage=p;						
				
			}
			private function getTaskUpdates(p:Number):void {
				jsonService3.url = Application.application.serverUrl + "/json.php/DumpServices.getTaskUpdates/"+_task.code+"/"+p+"/18";
				jsonService3.send();		
				updatePage=p;						
				
			}
			
			private function onGetTaskDeletionsResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.status =res.results[i].status;
					tem.push(pa);
					if(pa.status==null || pa.status=='') {
						review.pendingDeletedToReview++;
					}					
				}
				deleted=new ArrayCollection(tem);
				totalDeleted=res.total;
				totalDelPages = Math.ceil(totalDeleted/24);						
			}
			private function onGetTaskNewPasResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.status =res.results[i].status;
					tem.push(pa);
					if(pa.status==null || pa.status=='') {
						review.pendingNewToReview++;
					}
				}
				news=new ArrayCollection(tem);
				totalNew=res.total;
				totalNewPages = Math.ceil(totalNew/24);				
						
				
			}
			private function onGetTaskUpdatesResult(event:ResultEvent):void {
				var res:Object = JSON.decode(event.result as String);
				var tem:Array = [];
				for(var i:String in res.results as Array)  {
					var pa:Pa = new Pa();
					pa.id=res.results[i].id;
					pa.name=res.results[i].name;
					pa.country=res.results[i].country;
					pa.status =res.results[i].status;
					tem.push(pa);
					if(pa.status==null || pa.status=='') {
						review.pendingEditedToReview++;
					}					
				}
				updates=new ArrayCollection(tem);
				totalUpdated=res.total;
				totalUpdatesPages = Math.ceil(totalUpdated/24);						
				
			}
			
			
			private function commitChanges():void {
				jsonServiceCommit.url = Application.application.serverUrl + "/json.php/DumpServices.commitChanges";
				var params:Object={};
				params.taskCode = task.code;
				params.deleted = [];
				for each(var pa:Pa in review.pasDeletedReviewed) {
					params.deleted.push(pa.id+","+pa.status);
				}
				params.added = [];
				for each(var pa2:Pa in review.pasNewReviewed) {
					params.added.push(pa2.id+","+pa2.status);
				}
				params.updated = [];
				for each(var pa3:Pa in review.pasEditedReviewed) {
					params.updated.push(pa3.id+","+pa3.status);
				}
				jsonServiceCommit.send(params);		

				
			}
			
			
			private function onCommitResult(event:ResultEvent):void {
				
			}

				
			
			
			
		]]>
	</mx:Script>
	
	
	<mx:Label text="All tasks" fontFamily="Helvetica" fontWeight="bold" fontSize="12" color="#336699" left="14" top="17"
		 useHandCursor="true" mouseChildren="false" buttonMode="true" click="SWFAddress.setValue('/rec/pendingtasks')"/>
	<mx:HBox left="13" top="30" verticalAlign="bottom" horizontalGap="0" width="841">
		<mx:Label text="{_task.status + ' - ' + _task.description + ' ('+_task.code+')'}" fontFamily="Helvetica" fontWeight="bold" fontSize="20" color="#666666" left="14" top="35" letterSpacing="-1"/>
	</mx:HBox>
	
	<mx:VBox top="80" right="17" verticalGap="0" borderStyle="solid" borderThickness="0" cornerRadius="0" width="210">
		<mx:Canvas height="33" borderStyle="none" color="#FFFFFF" top="0" left="0" right="0" width="100%" styleName="darkHeader" backgroundSize="100%">
			<mx:Label text="Changes overview" fontSize="16" fontWeight="bold" fontFamily="Helvetica" top="7" bottom="7" letterSpacing="-1" right="69" width="129"/>
		</mx:Canvas>
		<mx:VBox verticalGap="0" width="100%" backgroundColor="#FFFFFF" paddingBottom="4" paddingTop="4">
			<itemrenders:MergeOverviewItem type="Deleted" total="{totalDeleted}" color="#ff3300" pending="{review.pendingDeletedToReview}" />
			<itemrenders:MergeOverviewItem type="New" total="{totalNew}" color="#339900" pending="{review.pendingNewToReview}" />
			<itemrenders:MergeOverviewItem type="Modified" total="{totalUpdated}" color="#336699" pending="{review.pendingEditedToReview}" />
		</mx:VBox>
		<mx:Canvas height="33" borderStyle="none" color="#333333" top="0" left="0" right="0" width="100%" styleName="softGreyBottom" backgroundSize="100%">
			<components:ShadowButton label="COMMIT CHANGES" click="commitChanges()" 
				verticalCenter="-1" right="5" width="128" letterSpacing="0" useHandCursor="true" mouseChildren="false" buttonMode="true" styleName="greenButton"/>
		</mx:Canvas>		
	</mx:VBox>
    
	<mx:Canvas backgroundColor="#FFFFFF" left="0" right="225" top="62" bottom="10">
		<mx:VBox left="15" right="15" top="15">
			<pendingtasks:EditUpdateNewBox id="deletedBox" includeInLayout="{deleted.length>0}" visible="{deleted.length>0}" 
				getNewData="{getTaskDeletions}" total="{totalDeleted}" totalPages="{totalDelPages}"
				typeBox="Deleted" mode="{ReviewProcess.DELETE}" page="{delPage}" dataAc="{deleted}" styleUp="softRedUp" styleDown="softRedBottom" />
			<pendingtasks:EditUpdateNewBox id="newBox"  includeInLayout="{news.length>0}" visible="{news.length>0}"
				getNewData="{getTaskNewPas}" total="{totalNew}" totalPages="{totalNewPages}"
				typeBox="New" mode="{ReviewProcess.CREATE}" page="{newPage}" dataAc="{news}" styleUp="softGreenUp" styleDown="softGreenBottom" />
			<pendingtasks:EditUpdateNewBox id="updatedBox"  includeInLayout="{updates.length>0}" visible="{updates.length>0}"
				getNewData="{getTaskUpdates}" total="{totalUpdated}" totalPages="{totalUpdatesPages}"
				typeBox="Modified" mode="{ReviewProcess.UPDATE}" page="{updatePage}" dataAc="{updates}" styleUp="softBlueUp" styleDown="softBlueBottom"  />

	    </mx:VBox>
	</mx:Canvas>
	<mx:Canvas x="648" y="53" width="18" height="1107" styleName="shadow" backgroundSize="100%" />

	<mx:HTTPService id="jsonService1" resultFormat="text" method="GET" result="onGetTaskDeletionsResult(event)" fault="trace(event.fault)" />
	<mx:HTTPService id="jsonService2" resultFormat="text" method="GET" result="onGetTaskNewPasResult(event)" fault="trace(event.fault)" />
	<mx:HTTPService id="jsonService3" resultFormat="text" method="GET" result="onGetTaskUpdatesResult(event)" fault="trace(event.fault)" />
	<mx:HTTPService id="jsonServiceCommit" resultFormat="text" method="POST" result="onCommitResult(event)" fault="trace(event.fault)" />

	
</mx:Canvas>
