<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="620" minWidth="230" creationComplete="init()"
	borderThickness="0" verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:components="com.vizzuality.view.components.*">
	<mx:Script>
		<![CDATA[
			import com.vizzuality.events.VegTypeClickEvent;
			import com.vizzuality.utils.Helper;
			import swf.SWFAddress;
			import swf.SWFAddressEvent;
			import mx.events.SliderEvent;
			import mx.events.CollectionEvent;
			import mx.collections.ArrayCollection;

			import com.vizzuality.utils.SliderThumbGmba;
			import com.vizzuality.events.SliderChangeEvent;
			import com.vizzuality.events.DeselectedEvent;
			import mx.controls.sliderClasses.Slider;
			import com.vizzuality.events.MyEventDispatcher;
			
			[Bindable] public var rangeAltitude: ArrayCollection = new ArrayCollection([0,7889]);
			[Bindable] public var rangeRelief: ArrayCollection = new ArrayCollection([0,3889]);
			[Bindable] public var vegetationValues: ArrayCollection;
			
			public var clickOnDeselect:Boolean = false;
			
			private function init():void {
				//Check params from the URL
			     if (SWFAddress.getPathNames().length>4) {
					var vegetationParams:ArrayCollection = Helper.getVegetationParams(SWFAddress.getPathNames()[4] as String);
					if(vegetationParams.length==8) {
	                   	if(vegetationParams.getItemAt(0)=="0") type1._selected=false;
	                   	if(vegetationParams.getItemAt(1)=="0") type2._selected=false;
	                   	if(vegetationParams.getItemAt(2)=="0") type3._selected=false;
	                   	if(vegetationParams.getItemAt(3)=="0") type4._selected=false;
	                   	if(vegetationParams.getItemAt(4)=="0") type5._selected=false;
	                   	if(vegetationParams.getItemAt(5)=="0") type6._selected=false;
	                   	if(vegetationParams.getItemAt(6)=="0") type7._selected=false;
	                   	if(vegetationParams.getItemAt(7)=="0") type8._selected=false;
					}
                   	
			     }
				
			}
						
			
			private function changeAltitudeValues(ev:SliderEvent):void {
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
			}
			
			private function changeReliefValues(ev:SliderEvent):void {
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
			}
			
			private function onChangeVegeValue(num:Number,event:VegTypeClickEvent):void {
				if (!clickOnDeselect) { 
					if ((vegetationValues.getItemAt(num) as Boolean) == false) {
						vegetationValues.setItemAt(true,num);
						(event.currentTarget as ChooseVegetableType)._selected=true;
					}
					
					var allTrue:Boolean=true;
					for (var i:uint=1;i<8;i++) {
						if(vegetationValues.getItemAt(i)==false) {
							allTrue=false;
							type1._selected=false;
							vegetationValues.setItemAt(false,0);
							break;
						}
					}
	
					if(allTrue) {
						vegetationValues.setItemAt(true,0);
						type1._selected=true;
						type2._selected=true;
						type3._selected=true;
						type4._selected=true;
						type5._selected=true;
						type6._selected=true;
						type7._selected=true;
						type8._selected=true;
					}
					MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
				}
				else clickOnDeselect = false;
			}
			
			private function onSelectAllClicked():void {
				if(vegetationValues.getItemAt(0) as Boolean) {
					for(var i:uint=0;i<8;i++) {
						vegetationValues.setItemAt(false,i);
					}
					type1._selected=false; 
					type2._selected=false; 
					type3._selected=false; 
					type4._selected=false; 
					type5._selected=false; 
					type6._selected=false; 
					type7._selected=false; 
					type8._selected=false; 
				} else {
					for(var i2:uint=0;i2<8;i2++) {
						vegetationValues.setItemAt(true,i2);
					}
					type1._selected=true; 
					type2._selected=true; 
					type3._selected=true; 
					type4._selected=true; 
					type5._selected=true; 
					type6._selected=true; 
					type7._selected=true; 
					type8._selected=true; 
				}
				vegetationValues.refresh();
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
			}
			
			
			
			private function lastTrueValue(num:Number):Boolean {
				for (var i:Number=0; i<vegetationValues.length; i++) {
					if (vegetationValues[i] && i!=num && i!=0) 
						return false;
				}
				return true;
			}
			
			private function allValueTrue(num:Number):Boolean {
				for (var i:Number=0; i<vegetationValues.length; i++) {
					if (!vegetationValues[i] && i!=0 && i!=num) 
						return false;
				}
				return true;
			}
			
			private function onSliderChange(event:Event):void {
				MyEventDispatcher.updatedSliders(sliderAltitude.values,sliderRoughness.values,vegetationValues.source);
			}
			
			private function onDeselectVegeValue(num:Number,event:DeselectedEvent, element:ChooseVegetableType):void {
				clickOnDeselect = true;
				
				if ((vegetationValues.getItemAt(num) as Boolean) == true) {
					vegetationValues.setItemAt(false,num);
					element._selected=false;
					element.useHandCursor = false;
					element.buttonMode=false;
				} 
				
				type1._selected=false;
							
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
				event.stopImmediatePropagation();
				event.stopPropagation();
				
			}
			
		]]>
	</mx:Script>

	<mx:VBox height="100%" width="100%" verticalGap="0" right="20" left="0">
	
		<!--LOGO-->
		<components:Logo x="0" y="0" borderThickness="0"/>
		
		<!--ALTITUDE-->
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" width="100%" height="81">
			<mx:VBox verticalGap="0" left="12" top="15" width="100%">
				<mx:Label text="ELEVATION" color="#FFFFFF" fontWeight="normal" fontSize="13" paddingLeft="8" toolTip="Taken from WorldClim"/>
				<mx:Canvas  height="45" width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" left="13" top="16"/>
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" right="25" top="16"/>
					<mx:Label text="0" left="4" textAlign="center" top="16" fontSize="11" color="#000000" fontWeight="normal"/>
					<mx:Label text="7889" right="0" textAlign="center" top="16" width="52" color="#000000" fontSize="11" fontWeight="normal"/>
					<mx:HSlider id="sliderAltitude" enabled="true" top="0" left="5" right="20" minimum="0" maximum="7889" values="{rangeAltitude.source}" showDataTip="false" width="100%" 
						thumbCount="2" change="onSliderChange(event)"  liveDragging="true" sliderThumbClass="{SliderThumbGmba}"
						showTrackHighlight="true" thumbRelease="changeAltitudeValues(event)"  snapInterval="30"/>
				</mx:Canvas>
			</mx:VBox>
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
		
		<!--ROUGHNESS-->
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" width="100%" height="81">
			<mx:VBox verticalGap="0" left="12" top="15" width="100%">
				<mx:Label text="RELIEF" color="#FFFFFF" fontWeight="normal" fontSize="13" paddingLeft="8" toolTip="A measurement of the steepnest of land. The more relief the more steepest"/>
				<mx:Canvas  height="45" width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" left="13" top="16"/>
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" right="25" top="16"/>
					<mx:Label text="200" left="4" textAlign="center" top="16" fontSize="11" color="#000000" fontWeight="normal"/>
					<mx:Label text="3397" right="0" textAlign="center" top="16" width="52" color="#000000" fontSize="11" fontWeight="normal"/>
					<mx:HSlider id="sliderRoughness" showDataTip="false" top="0" left="5" right="20" minimum="196" maximum="3397"  values="{rangeRelief.source}" 
						 change="onSliderChange(event)" sliderThumbClass="{SliderThumbGmba}" thumbRelease="changeReliefValues(event)"
						 width="100%" thumbCount="2" liveDragging="true" snapInterval="14" 
						 showTrackHighlight="true"/>
				</mx:Canvas>
			</mx:VBox>
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
		
		<!--VEGETATION-->
		<mx:Canvas width="100%" height="255">
			<mx:VBox verticalGap="0" left="20" top="15" right="5">
				<mx:Label text="VEGETATION TYPE" color="#FFFFFF" fontWeight="normal" fontSize="13" toolTip="Taken from WorldClim classification" />
				<mx:VBox verticalGap="1" width="100%">
					<mx:Spacer height="5" />
					<components:ChooseVegetableType id="type1" selectedColor="#dddddd" unselectedColor="#6B6C6C" textType="All / Unknown" click="onSelectAllClicked()" 
					 _selected="true"	 mamufa="true"/>
					
					<components:ChooseVegetableType id="type2" selectedColor="#006699" unselectedColor="#004365" textTooltip="Season length &lt;= 10 days" textType="Nival" clickOnVegTypeEvent="onChangeVegeValue(1,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(1,event, type2)"/>
					<components:ChooseVegetableType id="type3" selectedColor="#0099CC" unselectedColor="#005876" textTooltip="Season length between 10 and 59 days or season longer and season mean &lt; 3.5 degrees C" textType="Upper alpine" clickOnVegTypeEvent="onChangeVegeValue(2,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(2,event, type3)"/>
					<components:ChooseVegetableType id="type4" selectedColor="#79BA5C" unselectedColor="#3C5C2E" textTooltip="Season length &lt; 94 days or season mean &lt; 6.4 degrees C" textType="Lower alpine" clickOnVegTypeEvent="onChangeVegeValue(3,event)"
						 _selected="true" clickOnDeselectEvent="onDeselectVegeValue(3,event, type4)"/>
					<components:ChooseVegetableType id="type5" selectedColor="#3E6B2A" unselectedColor="#2C4C1E" textTooltip="Season length &gt;= 94 days and season mean between 6.4 and 10 degrees C" textType="Upper montane" clickOnVegTypeEvent="onChangeVegeValue(4,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(4,event, type5)"/>
					<components:ChooseVegetableType id="type6" selectedColor="#A68C2D" unselectedColor="#6A5A1E" textTooltip="Season length &gt;= 94 days and seasonal mean temperature between 10 and 15 degrees C" textType="Lower montane" clickOnVegTypeEvent="onChangeVegeValue(5,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(5,event, type6)"/>
					<components:ChooseVegetableType id="type7" selectedColor="#7A7D57" unselectedColor="#42432F" textTooltip="Warm zone with possible freezing. Season length &gt;= 94 days and season mean temperature &gt;= 15 degrees C" textType="Warm zone with possible freezing" clickOnVegTypeEvent="onChangeVegeValue(6,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(6,event, type7)"/>
					<components:ChooseVegetableType id="type8" selectedColor="#7E7F9C" unselectedColor="#4A4A5B" textTooltip="Perpetual warm conditions, no freezing. Season mean temperature &gt;= 15 degrees C" textType="Perpetual warm conditions, no freezing" clickOnVegTypeEvent="onChangeVegeValue(7,event)"
						_selected="true" clickOnDeselectEvent="onDeselectVegeValue(7,event, type8)"/>
						
				</mx:VBox>
			</mx:VBox> 
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
			
		<!--TAXON-->
		<components:Taxon id="taxonSearch" />

	</mx:VBox>
</mx:Canvas>	
	