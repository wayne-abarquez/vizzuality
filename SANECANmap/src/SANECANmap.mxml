<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:maps="com.google.maps.*"
	 layout="absolute" width="721" height="423" color="#747474" backgroundGradientAlphas="[1.0, 1.0]"
	 backgroundGradientColors="[#E6F7F7, #E6F7F7]" currentState="loading">
	<mx:states>
		<mx:State name="loading">
			<mx:SetProperty target="{addressInput}" name="enabled" value="false"/>
			<mx:SetProperty target="{button1}" name="enabled" value="false"/>
			<mx:AddChild position="lastChild">
				<mx:Canvas height="326" backgroundColor="#000000" backgroundAlpha="0.85" left="0" right="0" top="72">
					<mx:Label text="Loading" horizontalCenter="-1" verticalCenter="-10" color="#FFFFFF" fontSize="17"/>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
	</mx:states>
<mx:Script>
	<![CDATA[
		import com.google.maps.overlays.MarkerOptions;
		import com.google.maps.controls.MapTypeControlOptions;
		import com.google.maps.controls.MapTypeControl;
		import com.google.maps.LatLngBounds;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.http.mxml.HTTPService;
		import mx.controls.Alert;
		import com.google.maps.overlays.Marker;
		import com.google.maps.services.Placemark;
		import com.google.maps.services.GeocodingResponse;
		import com.google.maps.services.GeocodingEvent;
		import com.google.maps.services.ClientGeocoderOptions;
		import com.google.maps.services.ClientGeocoder;
		import com.google.maps.controls.ControlPosition;
		import com.google.maps.controls.ZoomControlOptions;
		import com.google.maps.controls.ZoomControl;
		import com.google.maps.LatLng;
		import com.google.maps.MapEvent;
		
		private var geocoder:ClientGeocoder;
		private var sanecans:Array=new Array();
		
	
		private function onMapReady(event:MapEvent):void {
			//map.setCenter(new LatLng(40.3228,-3.8655),13);
			var zco:ZoomControlOptions=new ZoomControlOptions({
				position: new ControlPosition(ControlPosition.ANCHOR_TOP_LEFT, 12, 12)
			});
			var zc:ZoomControl = new ZoomControl(zco);
			map.addControl(zc);
			
			var mtco:MapTypeControlOptions=new MapTypeControlOptions({
				position: new ControlPosition(ControlPosition.ANCHOR_TOP_LEFT, 32, 12)
			});
			var mtc:MapTypeControl = new MapTypeControl(mtco);
			map.addControl(mtc);
			
			
			geocoder = new ClientGeocoder(
			    new ClientGeocoderOptions({
			      language: "es",
			      viewport: map.getLatLngBounds()
			    }));
			
			geocoder.addEventListener(GeocodingEvent.GEOCODING_SUCCESS,onGeocodeResponse);    
			geocoder.addEventListener(GeocodingEvent.GEOCODING_FAILURE,onGeocodeFault);    
		
		
			var srv:HTTPService =  new HTTPService();
			srv.url = "http://spreadsheets.google.com/pub?key=r1nD0NusVHyIyRKVbDoMX2A&output=csv";
			srv.addEventListener(ResultEvent.RESULT,onSrvResult);
			srv.addEventListener(FaultEvent.FAULT,onSrvFault);
			srv.send();
		}
		
		private function onSrvResult(event:ResultEvent):void {
			var bbox:LatLngBounds=new LatLngBounds();
			
			var result:String=event.result as String;
			var properties:Array = new Array();
			var headings:Boolean = false;
			var carriage:Number = NaN;
			var comma:Number = NaN;
			var cursor:Number = 0;
			var sub:Number = NaN;
			var item:Object = null;
			var value:String = null;
			var line:String = null;			
			while(result.indexOf( "\n", cursor ) != -1 ) {
				carriage = result.indexOf( "\n", cursor );
				line = result.substring( cursor, carriage );
				line=line+",";
				cursor = 0;
				sub = 0;		
				item = new Object();		
				while( line.indexOf( ",", cursor ) != -1 ) {
				  comma = line.indexOf( ",", cursor );
				  value = line.substring( cursor, comma );
				
				  if( !headings ) {
				    properties.push( value );
				  } else {
				    item[properties[sub]] = value;
				  }				
				  cursor = comma + 1;
				  sub++;
				} 		
			    value = line.substring( cursor, line.length - 1 );
			
			    if( !headings ) {
			      properties.push( value );
			      headings = true;
			    } else {
			      item[properties[sub]] = value;
			      sanecans.push( item );
			      
			      //create markers
			      var latlng:LatLng=new LatLng(item["latitude"],item["longitude"]);
				  var options:MarkerOptions = new MarkerOptions({
							icon: new CustomIconSprite(item["type"]),
							iconAlignment: MarkerOptions.ALIGN_BOTTOM,
							iconOffset: new Point(-11,0),
							clickable:false
							});			      
			      
			      
			      var m:Marker = new Marker(latlng,options);
			      bbox.extend(latlng);
			      map.addOverlay(m);			      		      
			      
			    }		
				cursor = carriage + 1;
  			}	
  			
  			map.setCenter(bbox.getCenter(),map.getBoundsZoomLevel(bbox));	
  			currentState='';
  			    		
		}
		private function onSrvFault(event:FaultEvent):void {
			trace(event.fault);
		}
		
		
		private function onAddressClick():void {
			var address:String = addressInput.text;
			if (address.toLowerCase().indexOf("mostoles")<1)
				address+=",mostoles";
			if (address.toLowerCase().indexOf("españa")<1)
				address+=",españa";
			geocoder.geocode(address);
		}
		
		private function onGeocodeResponse(event:GeocodingEvent):void {
			var result:GeocodingResponse = event.response as GeocodingResponse;
			var pm:Placemark = result.placemarks[0] as Placemark;
	/* 		var pointCoords:LatLng=new LatLng(pm.point.lat(),pm.point.lng());
			var marker:Marker = new Marker(pm.point);
			map.addOverlay(marker); */
			map.setCenter(pm.point,16);
			
		}
		
		private function onGeocodeFault(event:GeocodingEvent):void {
			Alert.show("Disculpa, no hemos encontrado la dirección que has introducido");
		}
		
		private var alreadyCleaned:Boolean=false;
		private function clearInput():void {
			if (!alreadyCleaned) {
				addressInput.text="";
				alreadyCleaned=true;
			}
		}
		
	]]>
</mx:Script>

	<mx:Label x="10" y="10" text="Localiza los sanecan, tiendas y clínicas más cercanas a tí" fontSize="15"/>
	<mx:TextInput id="addressInput" y="42" left="10" right="83" enter="onAddressClick()" text="Introduce tu dirección" click="clearInput()"/>
	<mx:Button y="42" label="Buscar" right="10" id="button1" click="onAddressClick()"/>
	<maps:Map id="map" height="326" left="2" right="2" top="72" key="ABQIAAAAtDJGVn6RztUmxjnX5hMzjRQ90078BGwgMQ1AXXdPNoLNuCNk4hQ4ed9_s377T8EfU8iTpdFjsz8dgA" 
		mapevent_mapready="onMapReady(event)"/>	
<!--	<maps:Map id="map" height="326" left="2" right="2" top="72" key="ABQIAAAAtDJGVn6RztUmxjnX5hMzjRTJgdjRiA1iEZLNaLDwBpXQC8fT5xQjnAIzzs7GWWt3bGiUN4mI-fpuBg" 
		mapevent_mapready="onMapReady(event)"/>	-->
</mx:Application>
