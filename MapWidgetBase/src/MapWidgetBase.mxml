<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:header="com.vizzuality.view.header.*" xmlns:footer="com.vizzuality.view.footer.*" addedToStage="gaTracker.debug.minimizedOnStart=true;"
	layout="absolute" backgroundGradientAlphas="[1.0, 1.0]"
	backgroundGradientColors="[#E9F4FF, #D7E8FA]" creationComplete="initApp()" xmlns:components="com.google.analytics.components.*" xmlns:map="com.vizzuality.view.map.*">
	<mx:Script>
		<![CDATA[
			import com.vizzuality.view.AppStates;
			import asual.SWFAddressEvent;
			import asual.SWFAddress;
			import com.google.maps.MapEvent;
			import com.google.maps.Map;
			import mx.effects.easing.Exponential;
			import mx.events.ResizeEvent;
			import mx.managers.ToolTipManager;
			
			//To control the moving of the left an right screens
			private var isResizing:Boolean=false;
			private var isInLeftState:Boolean=true;
			
			public var map:Map;
			
			private function initApp():void {
				
				//Modify Tooltip behaviour so that it show inmediately
				ToolTipManager.showDelay = 0;
				ToolTipManager.hideDelay = 4000;		
				
			}
			
			public function onMapReady():void {				
				//We initialize the SWFAddress
				SWFAddress.addEventListener(SWFAddressEvent.CHANGE, handleSWFAddress);

				
				
				
				
			}
			
			private function handleSWFAddress(event:SWFAddressEvent):void {
				
				if(event.pathNames.length>0) {
					//we set the top state
					AppStates.gi().topState = event.pathNames[0];
					
					
					switch(event.pathNames[0]) {
						case(AppStates.WORLD):
							if(event.pathNames.length>1) {
								AppStates.gi().secondState=event.pathNames[1];		
							} else {
								AppStates.gi().secondState='';								
							}								
							break;
							
							
							
						case(AppStates.COUNTRIES):
							if(event.pathNames.length>1) {
								AppStates.gi().secondState=event.pathNames[1];
							} else {
								AppStates.gi().secondState='';								
							}
							break;
							
							
						case(AppStates.COUNTRY):
							if(event.pathNames.length==3) {
								AppStates.gi().activeCountryIsoCode = (event.pathNames[1] as String).toUpperCase();
								AppStates.gi().secondState=event.pathNames[2];
							} 
							else if(event.pathNames.length==2) {
								AppStates.gi().activeCountryIsoCode = (event.pathNames[1] as String).toUpperCase();
								AppStates.gi().secondState='';
							}
							else {
								trace('Wrong URL!');
							}
							break;
							
							
						case(AppStates.PA):
							if(event.pathNames.length==3) {
								AppStates.gi().activePaId = Number(event.pathNames[1]);
								AppStates.gi().secondState=event.pathNames[2];
							} 
							else if(event.pathNames.length==2) {
								AppStates.gi().activePaId = Number(event.pathNames[1]);
								AppStates.gi().secondState='';
							}
							else {
								trace('Wrong URL!');
							}
							break;
							
							
						default:
							//Not recognize params. Move them to the default states
							trace( "Top level state not recognize!" );
							AppStates.gi().topState=AppStates.WORLD;
							AppStates.gi().secondState=AppStates.ABOUT;				
						
					}
					
				} else {
					AppStates.gi().topState=AppStates.WORLD;
					AppStates.gi().secondState=AppStates.ABOUT;				
					
				}
			}	
				

			/**
			 * Toggle between full screen and not full screen.
			 */ 			
			public function toggleFullScreen():void{
	            try {
	            	var tim:Timer;
	                switch (Application.application.stage.displayState) {
	                    case StageDisplayState.FULL_SCREEN:
	                        Application.application.stage.displayState = StageDisplayState.NORMAL;
	                        tim = new Timer(1000,1);
			            	tim.addEventListener(TimerEvent.TIMER, function(event:TimerEvent):void {	
			            		dispatchEvent(new Event(ResizeEvent.RESIZE));
			            	});
	                        break;
	                    default:
	                        Application.application.stage.displayState = StageDisplayState.FULL_SCREEN;
	                        tim = new Timer(1000,1);
			            	tim.addEventListener(TimerEvent.TIMER, function(event:TimerEvent):void {	
			            		dispatchEvent(new Event(ResizeEvent.RESIZE));
			            	});
	                        
	                        break;
	                }
	            } catch (err:SecurityError) {
	                // ignore
	                trace(err.message);
	            }
			}    
			
			
		]]>
	</mx:Script>
	
	<mx:Style source="com/vizzuality/style/skin/ui.css"/>
	<mx:Style source="com/vizzuality/style/skin/fonts.css"/>
	
	<mx:VBox id="mainVBox" width="100%" height="100%" verticalGap="0">
		<header:Header id="header" />
		<map:MapCanvas id="mapCanvas" width="100%" height="100%" backgroundColor="#A8A8A8"/>
		<footer:Footer id="footer"/>
	</mx:VBox>
	
 	<components:FlexTracker id="gaTracker" account="UA-7333475-1" mode="AS3" visualDebug="false" /> 	
</mx:Application>
