<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="620" minWidth="230"
	borderThickness="0" verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:components="com.vizzuality.view.components.*">
	<mx:Script>
		<![CDATA[
			import mx.events.SliderEvent;
			import mx.events.CollectionEvent;
			import mx.collections.ArrayCollection;

			import com.vizzuality.utils.SliderThumbGmba;
			import com.vizzuality.events.SliderChangeEvent;
			import mx.controls.sliderClasses.Slider;
			import com.vizzuality.events.MyEventDispatcher;
			
			[Bindable] public var rangeAltitude: ArrayCollection = new ArrayCollection([0,7889]);
			[Bindable] public var rangeRelief: ArrayCollection = new ArrayCollection([0,3889]);
			[Bindable] public var vegetationValues: ArrayCollection;

			
			private function changeAltitudeValues(ev:SliderEvent):void {
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
			}
			
			private function changeReliefValues(ev:SliderEvent):void {
				MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
			}
			
			private function onChangeVegeValue(num:Number):void {
				if ((vegetationValues[num] as Boolean) == true) {
					if (num!=0) {
						if (lastTrueValue(num)) vegetationValues[0] = true
						vegetationValues[num] = false;
						MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
					}
				} else {
					if (num!=0) {
						if (allValueTrue(num)) {
							vegetationValues = new ArrayCollection([true,false,false,false,false,false,false,false,false]);
						} else {
							vegetationValues[0] = false;
							vegetationValues[num] = true;
						}
					} else {
						vegetationValues = new ArrayCollection([true,false,false,false,false,false,false,false,false]);
					}
					MyEventDispatcher.onChangeThumbRelease(sliderAltitude.values,sliderRoughness.values,vegetationValues);
				}
			}
			
			
			private function lastTrueValue(num:Number):Boolean {
				for (var i:Number=0; i<vegetationValues.length; i++) {
					if (vegetationValues[i] && i!=num && i!=0) 
						return false;
				}
				return true;
			}
			
			private function allValueTrue(num:Number):Boolean {
				for (var i:Number=0; i<vegetationValues.length; i++) {
					if (!vegetationValues[i] && i!=0 && i!=num) 
						return false;
				}
				return true;
			}
			
			private function onSliderChange(vent:Event):void {
				MyEventDispatcher.updatedSliders(sliderAltitude.values,sliderRoughness.values,[]);
				//trace(sliderAltitude.values.toString()+ "   "+sliderRoughness.values.toString());
			
			}
		]]>
	</mx:Script>

	<mx:VBox height="100%" width="100%" verticalGap="0" right="20" left="0">
	
		<!--LOGO-->
		<components:Logo x="0" y="0" borderThickness="0"/>
		
		<!--ALTITUDE-->
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" width="100%" height="81">
			<mx:VBox verticalGap="0" left="12" top="15" width="100%">
				<mx:Label text="ELEVATION" color="#FFFFFF" fontWeight="normal" fontSize="13" paddingLeft="8"/>
				<mx:Canvas  height="45" width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" left="13" top="16"/>
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" right="25" top="16"/>
					<mx:Label text="0" left="4" textAlign="center" top="16" fontSize="11" color="#000000" fontWeight="normal"/>
					<mx:Label text="7889" right="0" textAlign="center" top="16" width="52" color="#000000" fontSize="11" fontWeight="normal"/>
					<mx:HSlider id="sliderAltitude" enabled="true" top="0" left="5" right="20" minimum="0" maximum="7889" values="{rangeAltitude.source}" showDataTip="false" width="100%" 
						thumbCount="2" change="onSliderChange(event)"  liveDragging="true" sliderThumbClass="{SliderThumbGmba}"
						showTrackHighlight="true" thumbRelease="changeAltitudeValues(event)"  snapInterval="30"/>
				</mx:Canvas>
			</mx:VBox>
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
		
		<!--ROUGHNESS-->
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" width="100%" height="81">
			<mx:VBox verticalGap="0" left="12" top="15" width="100%">
				<mx:Label text="RELIEF" color="#FFFFFF" fontWeight="normal" fontSize="13" paddingLeft="8"/>
				<mx:Canvas  height="45" width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" left="13" top="16"/>
					<mx:VRule strokeColor="#000000" strokeWidth="1" height="3" right="25" top="16"/>
					<mx:Label text="0" left="4" textAlign="center" top="16" fontSize="11" color="#000000" fontWeight="normal"/>
					<mx:Label text="3397" right="0" textAlign="center" top="16" width="52" color="#000000" fontSize="11" fontWeight="normal"/>
					<mx:HSlider id="sliderRoughness" showDataTip="false" top="0" left="5" right="20" minimum="0" maximum="3397"  values="{rangeRelief.source}" 
						 change="onSliderChange(event)" sliderThumbClass="{SliderThumbGmba}" thumbRelease="changeReliefValues(event)"
						 width="100%" thumbCount="2" liveDragging="true" snapInterval="14" 
						 showTrackHighlight="true"/>
				</mx:Canvas>
			</mx:VBox>
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
		
		<!--VEGETATION-->
		<mx:Canvas width="100%" height="255">
			<mx:VBox verticalGap="0" left="20" top="15" width="100%">
				<mx:Label text="VEGETATION TYPE" color="#FFFFFF" fontWeight="normal" fontSize="13" />
				<mx:VBox verticalGap="1" width="100%">
					<mx:Spacer height="5" />
					<components:ChooseVegetableType id="type1" selectedColor="#dddddd" unselectedColor="#6B6C6C" textType="All / Unknown" click="onChangeVegeValue(0)" 
						data="{vegetationValues.getItemAt(0)}" mamufa="true"/>
					<components:ChooseVegetableType id="type2" selectedColor="#006699" unselectedColor="#004365" textType="Far above" click="onChangeVegeValue(1)"
						data="{vegetationValues.getItemAt(1)}" />
					<components:ChooseVegetableType id="type3" selectedColor="#0099CC" unselectedColor="#005876" textType="Adjacent above" click="onChangeVegeValue(2)"
						data="{vegetationValues.getItemAt(2)}" />
					<components:ChooseVegetableType id="type4" selectedColor="#79BA5C" unselectedColor="#3C5C2E" textType="Adjacent below" click="onChangeVegeValue(3)"
						data="{vegetationValues.getItemAt(3)}"/>
					<components:ChooseVegetableType id="type5" selectedColor="#3E6B2A" unselectedColor="#2C4C1E" textType="Below" click="onChangeVegeValue(4)"
						data="{vegetationValues.getItemAt(4)}"/>
					<components:ChooseVegetableType id="type6" selectedColor="#A68C2D" unselectedColor="#6A5A1E" textType="Dry desert" click="onChangeVegeValue(5)"
						data="{vegetationValues.getItemAt(5)}"/>
					<components:ChooseVegetableType id="type7" selectedColor="#7A7D57" unselectedColor="#42432F" textType="Arid grassland" click="onChangeVegeValue(6)"
						data="{vegetationValues.getItemAt(6)}"/>
					<components:ChooseVegetableType id="type8" selectedColor="#7E7F9C" unselectedColor="#4A4A5B" textType="Above - Arid" click="onChangeVegeValue(7)"
						data="{vegetationValues.getItemAt(7)}"/>
					<components:ChooseVegetableType id="type9" selectedColor="#915659" unselectedColor="#492B2D" textType="Below - Arid" click="onChangeVegeValue(8)"
						data="{vegetationValues.getItemAt(8)}"/>
				</mx:VBox>
			</mx:VBox> 
			<mx:HRule top="0" left="2" right="0" strokeColor="#424243" strokeWidth="1" />
			<mx:HRule bottom="0" left="2" right="0" strokeColor="#000000" strokeWidth="1"/>
		</mx:Canvas>
			
		<!--TAXON-->
		<components:Taxon />

	</mx:VBox>
</mx:Canvas>	
	