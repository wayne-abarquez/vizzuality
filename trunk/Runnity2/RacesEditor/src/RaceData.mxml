<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:maps="com.google.maps.*" xmlns:local="*">


	<mx:Script>
		<![CDATA[
			import com.google.maps.LatLngBounds;
			import mx.core.Application;
			import com.google.maps.Color;
			import com.google.maps.styles.StrokeStyle;
			import com.google.maps.styles.FillStyle;
			import com.google.maps.controls.MapTypeControl;
			import com.google.maps.controls.PositionControl;
			import com.google.maps.controls.ZoomControl;
			import com.google.maps.MapAction;
			import com.google.maps.MapType;
			import mx.controls.Alert;
			import com.google.maps.LatLng;
			import com.google.maps.services.ClientGeocoder;
			import com.google.maps.overlays.MarkerOptions;
			import mx.collections.ArrayCollection;
			import com.google.maps.overlays.Marker;
			import com.google.maps.MapMouseEvent;
			import com.google.maps.services.GeocodingEvent;
			import mx.events.CloseEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			//control parameters
			public var mapReady: Boolean = false;
			private var hasChanged:Boolean = false;
			
			private var startRaceMarker: Marker ;
			private var finishRaceMarker: Marker ;
			private var findMarker: Marker;
			private var markersArray: Array = new Array();

			public var raceData: Object = new Object();
			[Bindable]public var provincesArray: ArrayCollection;
			
			
			//map events
			private function onMapReady(event:Event):void {
		        mapReady = true;
		        if (raceData != null) {
		        	cleanInputs();
		        	fillInputs(raceData);
		        }	
		    	map.setDoubleClickMode(MapAction.ACTION_NOTHING); 
	  			map.addControl(new ZoomControl());
	  			map.addControl(new PositionControl());
	  			map.addControl(new MapTypeControl());
		        map.addEventListener(MapMouseEvent.CLICK, onMapClick);		
			}
			
			
			private function onMapClick(event:MapMouseEvent):void { 
				if (markersArray.length==0) {
					/* AÑADIMOS EL PRINCIPIO */
					markersArray.push(event.latLng);
					startRaceMarker = new Marker(event.latLng,new MarkerOptions({ fillStyle: new FillStyle({ alpha: 0.75, color: 0x00CCFF}), 
								         labelFormat: {color: 0xFFFFFF, bold: true},
								         draggeable: true,
								         hasShadow: false, 
								         radius: 12, 
								         label: "S",
								         strokeStyle: new StrokeStyle({ alpha: 0.8, color: 0x000000, thickness: 1 })
								         }));
					map.addOverlay(startRaceMarker);
					
				} else {
					if (markersArray.length==1) {
						markersArray.push(event.latLng);
						finishRaceMarker = new Marker(event.latLng,new MarkerOptions({ fillStyle: new FillStyle({ alpha: 0.75, color: Color.RED}), 
								         labelFormat: {color: 0xFFFFFF, bold: true},
								         draggeable: true,
								         hasShadow: false, 
								         radius: 12, 
								         label: "Ll",
								         strokeStyle: new StrokeStyle({ alpha: 0.8, color: 0x000000, thickness: 1 })
								         }));
						map.addOverlay(finishRaceMarker);
					} 
				}
				
				map.setCenter(event.latLng);
			}
			
			//geocoder actions
			private function searchLocation(str: String):void {
		    	var geocoder:ClientGeocoder = new ClientGeocoder();
                geocoder.addEventListener(GeocodingEvent.GEOCODING_SUCCESS, geocoder_geocodingSuccess);
                geocoder.addEventListener(GeocodingEvent.GEOCODING_FAILURE, geocoder_geocodingFailure);
                geocoder.geocode(str);
		    }
		    
		    private function geocoder_geocodingSuccess(evt:GeocodingEvent):void {
                var result:LatLng = new LatLng(evt.response.Placemark[0].Point.coordinates[1],evt.response.Placemark[0].Point.coordinates[0]);  
                findMarker = new Marker(result);
                map.addOverlay(findMarker);                       							                
                map.setCenter(findMarker.getLatLng(),14);
            }

            private function geocoder_geocodingFailure(evt:GeocodingEvent):void {
                Alert.show("No se ha encontrado esta localización: " + evt.name);
            }
            
 
 
            public function cleanInputs():void {
            	distance_text.text = "";
            	distance_meters.text = "";
            	iden.text = "";
            	race_name.text = "";
            	date.text = "";
            	category.text = "";
            	awards.text = "";
            	price.text = "";
            	inscription_email.text = "";
            	inscription_location.text = "";
            	web.text = "";
            	description.text = "";
            	race_location.text = ""; 
            	publishedRunCheck.selected = false;
            	runType.selectedItem = null;
            	provincesCombo.selectedItem = null;
            	inscription_phone.text = "";
            	flickr.text = "";
            	markersArray = new Array();
            	map.clearOverlays();   
            	map.setCenter(new LatLng(40.44694705960048, -3.33984375), 5, MapType.NORMAL_MAP_TYPE);      	
            }
            
            public function fillInputs(obj: Object):void {
            	markersArray = new Array();
            	
            	if (obj.distance_text!=null) distance_text.text = obj.distance_text as String;
            	if (obj.distance_meters!=null) distance_meters.text = obj.distance_meters;
            	if (obj.id!=null) iden.text = obj.id;
            	if (obj.name!=null) race_name.text = obj.name;
            	if (obj.event_date!=null) date.text = obj.event_date;
            	if (obj.category!=null) category.text = obj.category;
            	if (obj.awards!=null) awards.text = obj.awards;
            	if (obj.inscription_price!=null) price.text = obj.inscription_price;
            	if (obj.inscription_email!=null) inscription_email.text = obj.inscription_email;
            	if (obj.inscription_website!=null) web.text = obj.inscription_website;
            	if (obj.inscription_location!=null) inscription_location.text = obj.inscription_location;
            	if (obj.description!=null) description.text = obj.description;
            	if (obj.event_location!=null) race_location.text = obj.event_location; 
            	if (obj.province_fk!=null)  provincesCombo.selectedIndex = obj.province_fk - 1;
            	if (obj.is_displayed_in_home!=null) {
            		if (obj.is_displayed_in_home == 'f') {
            			selectedRunCheck.selected = false;
            		} else {
            			selectedRunCheck.selected = true;
            		}
            	}
            	runType.selectedIndex = obj.run_type-1;
            	
            	if (obj.published == "f") {
        			publishedRunCheck.selected = false;
        		} else {
        			publishedRunCheck.selected = true;
        		}
        		if (obj.tlf_informacion!=null) inscription_phone.text = obj.tlf_informacion; 
        		if (obj.flickr_url!=null) flickr.text = obj.flickr_url; 
            	
            	try{ map.clearOverlays() } catch(e:Error) {}

            	if (obj.start_point_lat!=null) {
	            	startRaceMarker = new Marker(new LatLng(obj.start_point_lat,obj.start_point_lon),new MarkerOptions({ fillStyle: new FillStyle({ alpha: 0.75, color: 0x00CCFF}), 
									         labelFormat: {color: 0xFFFFFF, bold: true},
									         draggeable: true,
									         hasShadow: false, 
									         radius: 12, 
									         label: "S",
									         strokeStyle: new StrokeStyle({ alpha: 0.8, color: 0x000000, thickness: 1 })
									         }));
									         
					map.addOverlay(startRaceMarker);
	            	
	            	finishRaceMarker = new Marker(new LatLng(obj.end_point_lat,obj.end_point_lon),new MarkerOptions({ fillStyle: new FillStyle({ alpha: 0.75, color: Color.RED}), 
									         labelFormat: {color: 0xFFFFFF, bold: true},
									         draggeable: true,
									         hasShadow: false, 
									         radius: 12, 
									         label: "Ll",
									         strokeStyle: new StrokeStyle({ alpha: 0.8, color: 0x000000, thickness: 1 })
									         }));
	            	map.addOverlay(finishRaceMarker);
	            	
	            	markersArray.push(startRaceMarker.getLatLng());
	            	markersArray.push(finishRaceMarker.getLatLng());
	            	
	            	var directionsBounds:LatLngBounds = new LatLngBounds();
	            	directionsBounds.extend(markersArray[0] as LatLng);
	            	directionsBounds.extend(markersArray[1] as LatLng);
	            	trace(directionsBounds.getCenter());
	            	
					map.setCenter(directionsBounds.getCenter(),map.getBoundsZoomLevel(directionsBounds));      		
            	}
            	
            	editRace();
				loader.visible = false;
            }

            
            [Bindable] private var recorridoCanvasHabilitado:Boolean=false;
            private function editRace():void {
            	recorridoCanvasHabilitado=false;
            	Application.application.server.addEventListener(ResultEvent.RESULT,onGetGeometryDataOK);
            	Application.application.server.addEventListener(FaultEvent.FAULT,onGetGeometryDataKO);
            	Application.application.server.getTrackGeometry(iden.text);
            }
            
            private function onGetGeometryDataOK(ev:ResultEvent):void {
            	Application.application.server.removeEventListener(ResultEvent.RESULT,onGetGeometryDataOK);
            	Application.application.server.removeEventListener(FaultEvent.FAULT,onGetGeometryDataKO);
            	geometryRace.data = ev.result;
            	recorridoCanvasHabilitado=true;
            }
            
            private function onGetGeometryDataKO(ev:FaultEvent):void {
        		Application.application.server.removeEventListener(ResultEvent.RESULT,onGetGeometryDataOK);
            	Application.application.server.removeEventListener(FaultEvent.FAULT,onGetGeometryDataKO);
            	trace(ev.fault);    	
            }
            
            
            private function checkUserCanSave():Boolean {
            	if (date.text.length==0) {
            		Alert.show('No has puesto la fecha de la carrera');
            		return false;
            	}
            	
            	if (race_name.text.length==0) {
            		Alert.show('No has puesto el nombre de la carrera');
            		return false;
            	}
            	
            	
            	if (runType.selectedItem==null) {
            		Alert.show('No has seleccionado el tipo de la carrera');
            		return false;
            	}
            	
            	if (distance_text.text.length==0) {
            		Alert.show('No has puesto la distancia en texto de la carrera');
            		return false;
            	}     
            	
            	if (distance_meters.text.length==0) {
            		Alert.show('No has puesto la distancia en metros de la carrera');
            		return false;
            	} 
            	
            	if (provincesCombo.selectedItem==null) {
            		Alert.show('No has seleccionado la provincia de la carrera');
            		return false;
            	}         	              	       	
            	
            	if (race_location.length==0) {
            		Alert.show('No has puesto el lugar de la carrera');
            		return false;
            	}
            	
            	if (markersArray.length!=2) {
            		Alert.show('Indica en el mapa donde empieza y donde acaba la carrera');
            		return false;
            	}
            	
            	return true;
            }
            
             
            //add new race or edit previous race
            private function saveData (identification: String = null): void {
            	
            	if (!checkUserCanSave()) {
            		return;
            	}


            	if (identification==null) /* ESTA CREANDO UNO NUEVO */ {
            		loader.message = "Creando la nueva carrera";
					loader.visible = true;  
            		Application.application.server.addEventListener(ResultEvent.RESULT, onEditNewRace);
            		Application.application.server.addEventListener(FaultEvent.FAULT, onEditNewRaceFault);
                	Application.application.server.createNewRun(race_name.text,race_location.text,distance_meters.text,distance_text.text,date.text,
                	category.text,awards.text,description.text,price.text,inscription_location.text,inscription_email.text,
                	web.text,(markersArray.length==0)?null:markersArray[0].lat(),(markersArray.length==0)?null:markersArray[0].lng(),
                	(markersArray.length==0)?null:markersArray[1].lat(),(markersArray.length==0)?null:markersArray[1].lng(), 
                	provincesCombo.selectedItem.id,(selectedRunCheck.selected)?'t':'f',runType.selectedIndex+1,publishedRunCheck.selected,inscription_phone.text,flickr.text);
            	} else { /* ESTA EDITANDO UNO PREVIO*/
            		loader.message = "Editando los datos de la carrera";
					loader.visible = true; 
		        	Application.application.server.addEventListener(ResultEvent.RESULT,onEditNewRace);
		        	Application.application.server.addEventListener(FaultEvent.FAULT,onEditNewRaceFault);
                	Application.application.server.updateRun(iden.text,race_name.text,race_location.text,distance_meters.text,distance_text.text,date.text,
                	category.text,awards.text,description.text,price.text,inscription_location.text,inscription_email.text,
                	web.text,(markersArray.length==0)?null:markersArray[0].lat(),(markersArray.length==0)?null:markersArray[0].lng(),
                	(markersArray.length==0)?null:markersArray[1].lat(),(markersArray.length==0)?null:markersArray[1].lng(),provincesCombo.selectedItem.id,(selectedRunCheck.selected)?'t':'f',
                	runType.selectedIndex+1,publishedRunCheck.selected,inscription_phone.text,flickr.text);
            	}

            }
            
            private function onEditNewRace(event: ResultEvent):void {
            	Application.application.server.removeEventListener(ResultEvent.RESULT,onEditNewRace);
            	Application.application.server.removeEventListener(FaultEvent.FAULT,onEditNewRaceFault);
				if (iden.text.length==0) {iden.text = event.result as String;}
				hasChanged = false;
				loader.visible = false;
				
				if (!publishedRunCheck.selected) {
					Alert.show("Carrera editada o añadida satisfactoriamente, bocati di Carabancheli");
				} else {
	            	Alert.yesLabel = "Cerrar";
	                Alert.noLabel = "Ver la carrera en Runnity";
	                Alert.buttonWidth = 100;
					Alert.show("Has editado o creado una carrera nueva " + Application.application.userName +". Puedes comprobar su estado en la web... ",
	            		"Bocati de Carabancheli", Alert.YES | Alert.NO , this, function(event:CloseEvent):void {if(event.detail == Alert.NO) { navigateToURL(new URLRequest('http://runnity.com/run/'+iden.text+'/tw'), '_blank');}});
				}
				

            }
            
            private function onEditNewRaceFault(event: FaultEvent):void {
            	Application.application.server.removeEventListener(ResultEvent.RESULT,onEditNewRace);
            	Application.application.server.removeEventListener(FaultEvent.FAULT,onEditNewRaceFault);
				hasChanged = false;
				loader.visible = false;
				Alert.show(event.fault.faultString);
            }
            
            
            //Clean and undo map actions
            private function cleanOverlay():void {
            	markersArray = new Array();
            	map.clearOverlays();
            }
            
            private function undo():void {
            	if (markersArray.length==1) {
            		markersArray.pop();
            		map.removeOverlay(startRaceMarker);
            	} else {
            		if (markersArray.length==2) {
            			markersArray.pop();
            			map.removeOverlay(finishRaceMarker);
            		}
            	}
            }
            
            private function backToRaces():void {
            	Alert.yesLabel = "Si";
                Alert.noLabel = "No";
                Alert.buttonWidth = 50;
				if (hasChanged) {
					var a:Alert = Alert.show("Has cambiado datos de esta carrera y no has guardado, ¿quieres volver al listado de carreras?", 
            		"Vas a salir sin guardar", Alert.YES | Alert.NO , this, backToRacesFunction);
				} else {
					Application.application.currentState = 'loading';
	            	Application.application.init();
	            	recorridoCanvasHabilitado = false;
				}	    	
            }
            
            private function backToRacesFunction(event:CloseEvent):void {
				if(event.detail == Alert.YES) {
					hasChanged = false;
					recorridoCanvasHabilitado = false;   	
            		Application.application.currentState = 'loading';
	           		Application.application.init();     			
    			} else {
    				loader.visible = false;
    			}
            }
            
            
            private function checkFlickrImage():void {
            	
            }
            
            
		]]>
	</mx:Script>




	<mx:VBox height="100%" width="100%">

		<mx:TabNavigator id="racesTab" width="100%" height="100%" top="32" selectedIndex="0" borderColor="gray" borderStyle="solid" creationPolicy="all" paddingBottom="20">
		
			<mx:Canvas id="dataRace" label="Datos" backgroundColor="#eeeeee" height="100%" width="100%">
				<mx:Label x="10" y="9" text="ID" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="112" text="Distancia texto" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="450" y="114" text="Distancia (en metros)" width="140" textAlign="right" fontFamily="Arial" fontSize="14" color="#333333"/>
				<mx:Label x="10" y="78" text="Nombre carrera" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="44" text="Fecha" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="146" text="Categoría" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="181" text="Premios" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="214" text="Precio" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="247" text="Lugar inscripción" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="319" text="Ciudad carrera" width="168" textAlign="right"  color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="354" text="Inicio y final carrera" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<maps:Map id="map" y="354" height="400" mapevent_mapready="onMapReady(event)" 
					key="ABQIAAAAtDJGVn6RztUmxjnX5hMzjRTy9E-TgLeuCHEEJunrcdV8Bjp5lBTu2Rw7F-koeV8TrxpLHZPXoYd2BA" left="186" right="40"/>
				<mx:Button x="260" y="365.5" label="Limpiar marcadores" click="cleanOverlay()" alpha="1" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A"/>
				<mx:Label x="10" y="815" text="Email organización" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="848" text="Teléfono organización" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="884" text="URL IMAGEN" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:Label x="10" y="916" text="Descripción" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:HBox top="10" right="40" horizontalAlign="right" height="30">
					<mx:Button id="saveChanges" label="Guardar cambios" click="(iden.text=='')?saveData():saveData(iden.text)" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				</mx:HBox>
				<mx:Label x="10" y="779" text="Website organización" width="168" textAlign="right" color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:CheckBox x="390" y="7" label="¿Carrera destacada?" id="selectedRunCheck" fontFamily="Arial" fontSize="14" color="#333333"/>
				<mx:CheckBox x="278" y="6" label="Publicado?" id="publishedRunCheck" borderColor="#727272" fontFamily="Arial" fontSize="14" color="#333333"/>
				<mx:TextInput x="186" y="8" change="hasChanged=true" width="78" enabled="false" id="iden" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="39" change="hasChanged=true" width="255" id="date" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="73" change="hasChanged=true" width="447" id="race_name" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="107" change="hasChanged=true" width="255" id="distance_text" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="597" y="108" change="hasChanged=true" width="255" id="distance_meters" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="141" change="hasChanged=true" width="255" id="category" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="175" change="hasChanged=true" width="666" id="awards" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="209" change="hasChanged=true" width="666" id="price" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="243" change="hasChanged=true" width="666" id="inscription_location" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:Label x="10" y="285" text="Provincia carrera" width="168" textAlign="right"  color="#3F3F3F" fontFamily="Arial" fontSize="14"/>
				<mx:TextInput id="race_location" change="hasChanged=true" x="186" y="313" width="666" enter="searchLocation(race_location.text)" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput id="buscador"  x="260" y="717.3" width="375.33337" enter="searchLocation(buscador.text)" borderStyle="solid" borderColor="#DDDDDD" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
				<mx:TextInput x="186" y="773" change="hasChanged=true" width="600" id="web" borderStyle="solid" borderThickness="1" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="808" change="hasChanged=true" width="600" id="inscription_email" borderStyle="solid" borderColor="#DDDDDD" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="843" change="hasChanged=true" width="600" id="inscription_phone" borderColor="#DDDDDD" borderStyle="solid" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextInput x="186" y="878" change="hasChanged=true" width="600" id="flickr" borderColor="#DDDDDD" borderStyle="solid" paddingLeft="5" paddingRight="5" paddingTop="5" color="#222222" paddingBottom="5" fontSize="12"/>
				<mx:TextArea x="186" width="600" change="hasChanged=true" height="100" id="description" top="913" borderColor="#DDDDDD" color="#222222" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" fontSize="12" text=" "/>
				<mx:Button x="407" y="365.5" label="Deshacer último" alpha="1" click="undo()" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A"/>
				<mx:ComboBox x="187" y="281" change="hasChanged=true" id="provincesCombo" dataProvider="{provincesArray}" labelField="name" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A" width="212" height="28"></mx:ComboBox>
				<mx:Label x="641" y="77" text="Tipo" textAlign="left"  fontFamily="Arial" fontSize="14" color="#333333"/>
				<mx:ComboBox x="681" y="76" change="hasChanged=true" id="runType" labelField="name" textAlign="left" width="170" borderColor="#8C8C8C" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A">
					<mx:dataProvider>
		                <mx:String>Mediofondo</mx:String>
		                <mx:String>Fondo</mx:String>
		                <mx:String>Marathon-Ultrafondo</mx:String>
		                <mx:String>Cross/Campo</mx:String>
		                <mx:String>Combinadas</mx:String>
		            </mx:dataProvider>
				</mx:ComboBox>
				<mx:Button label="Guardar cambios" click="(iden.text=='')?saveData():saveData(iden.text)" right="40" y="1034" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A"
					useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				<mx:Button x="633.3" y="717.3" label="Buscar" click="searchLocation(buscador.text)" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" color="#4A4A4A" height="30" width="64"/>
				<mx:Label x="449" y="43" text="Ejemplo:   2010-06-09 00:00:00" width="193" fontFamily="Arial" fontSize="12" color="#333333"/>
				<mx:Button x="794" y="884" label="Comprobar" click="checkFlickrImage()" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				<mx:Label x="891" y="887" text="Resultado" color="#000000" fontFamily="Arial" fontSize="12"/>
		    </mx:Canvas>
		
		    <mx:Canvas id="recorridoCanvas" label="Recorrido" backgroundColor="#D7D7D7" enabled="{recorridoCanvasHabilitado}">
		        <local:SetRaceLocation id="geometryRace"/>
		    </mx:Canvas>
		</mx:TabNavigator>
		<mx:HBox horizontalAlign="right">
			<mx:Button label="Volver al listado" id="backToList" useHandCursor="true" buttonMode="true" mouseChildren="false" fillAlphas="[1.0, 1.0]" fillColors="[#FFFFFF, #FFFFFF]" 
				color="#19355B" themeColor="#09283B" borderColor="#333333" click="backToRaces()"/>
		</mx:HBox>	
	</mx:VBox>
	
	<local:LoadingWindow id="loader" width="100%" height="100%" visible="false" message="Cargando los datos de la carrera, date tú y date él"/>
	
</mx:Canvas>
