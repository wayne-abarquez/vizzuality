<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" horizontalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
			import com.vizzuality.view.timeline.events.TimelineButtonEvent;
			import mx.controls.HRule;
			import mx.controls.CheckBox;
			import mx.controls.Button;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			
			private var labelProvider: ArrayCollection = new ArrayCollection();
			private var _caNew: Canvas;
			private var _status: Label;
			private var _checkBox: CheckBox;
			private var _button: Button;
			private var _object: Object;
			private var _horLine: HRule;
			private var _ev: TimelineButtonEvent;
			
			
			override public function set data(obj: Object):void {
				this.removeAllChildren();
				
				_status = new Label();
				_status.text = "Data Timeline";
				_status.setStyle("color","#a1a1a1");
				_status.setStyle("fontSize","15");
				_status.x = 30;
				_status.y = 5;
				this.addChild(_status);
				
				_horLine = new HRule();
				_horLine.setStyle("color","#a1a1a1");
				_horLine.y = 31;
				_horLine.x = 5;
				_horLine.width = this.width-13;
				this.addChild(_horLine);
				
				
				labelProvider = obj as ArrayCollection;
				if (labelProvider != null) {						
					for(var i:int=0;i<labelProvider.length;i++) {
					    _caNew = new Canvas();
					    _caNew.x = 5;
					    _caNew.y = (i*28) + 39;
					    _caNew.width = this.width;
					    
					    _checkBox = new CheckBox();
					    _checkBox.selected = true;
					    _object = new Object();
						_object.id = labelProvider[i].id;
						_object.pos = 0;
						_checkBox.data = _object;
					    _checkBox.addEventListener(MouseEvent.CLICK,onClickButton);
					    _caNew.addChild(_checkBox);
					    
					    _status = new Label();
					    _status.text = labelProvider[i].name;
					    _status.setStyle("color","#3d313b");
					    _status.width = this.width - 70;
					    _status.x = 20;
					    _caNew.addChild(_status);
					    
					    _button = new Button();
						_button.setStyle("right","10");
						_button.width = 12;
						_button.height = 12;
					    _object = new Object();
						_object.id = labelProvider[i].id;
						_object.pos = 3;
						_button.data = _object;
						_button.addEventListener(MouseEvent.CLICK,onClickButton);
						_caNew.addChild(_button);
						
						_button = new Button();
						_button.setStyle("right","25");
						_button.width = 12;
						_button.height = 12;
						_object = new Object();
						_object.id = labelProvider[i].id;
						_object.pos = 2;
						_button.data = _object;						
						_button.addEventListener(MouseEvent.CLICK,onClickButton);					
						_caNew.addChild(_button);
						
						_button = new Button();
						_button.setStyle("right","40");
						_button.width = 12;
						_button.height = 12;
						_object = new Object();
						_object.id = labelProvider[i].id;
						_object.pos = 1;
						_button.data = _object;
						_button.addEventListener(MouseEvent.CLICK,onClickButton);
						_caNew.addChild(_button);
						
						_horLine = new HRule();
						_horLine.setStyle("color","#a1a1a1");
						_horLine.y = 21;
						_horLine.width = this.width-13;
						_caNew.addChild(_horLine);
						
											    
				    	this.addChild(_caNew);
					}
					
				}
			}
			
			private function onClickButton(ev: Event):void {
				trace("id: " + ev.target.data.id);
				trace("pos: " + ev.target.data.pos);
								
				switch (ev.target.data.pos as int) {
					case 0:	
						_ev = new TimelineButtonEvent(TimelineButtonEvent.TIMELINE_VISIBLE);
						_ev.specieID = ev.target.data.id as int;
						_ev.visible = ev.target.selected as Boolean;
						trace(ev.target.selected);
 						dispatchEvent(_ev);
						break ;
					case 1:	
						_ev = new TimelineButtonEvent(TimelineButtonEvent.INFORMATION_SPECIE);
						_ev.specieID = ev.target.data.id;
						dispatchEvent(_ev);
						break ;
					case 2:
						_ev = new TimelineButtonEvent(TimelineButtonEvent.INFORMATION_GBIF);
						_ev.specieID = ev.target.data.id;
						dispatchEvent(_ev);
						break ;
					default:
						_ev = new TimelineButtonEvent(TimelineButtonEvent.DELETE_SPECIE);
						_ev.specieID = ev.target.data.id;
						dispatchEvent(_ev);
				}
			}
		]]>
	</mx:Script>
	
</mx:Canvas>
