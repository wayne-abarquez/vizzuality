<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="205" height="43" creationComplete="init()" backgroundColor="#FFFFFF"
	rollOver="handleOver(event)" rollOut="handleOut(event)" xmlns:components="org.vizzuality.components.*">
	<mx:Script>
		<![CDATA[
			import org.vizzuality.events.MyEventDispatcher;
			import org.vizzuality.model.Pa;
			import mx.controls.TileList;
			import gs.TweenMax;
			
			[Bindable] public var pa:Pa;
			
			[Bindable] public var status:String;
			[Bindable] public var textColor:uint;
			[Bindable] public var statusColor:uint;
			
			[Bindable] public var addedItem: Boolean = false;
			
			override public function set data(value:Object):void {
            	if (value != null) {
            		pa = value as Pa;
                	super.data = value;
                	status = value.status;
                }
                
                
            }
            
            private function init():void {
             	var ow:TileList = owner as TileList;
				var dataIndex:int = ow.itemRendererToIndex(this);
				var itsAmount:int = ow.columnCount*ow.rowCount;
				var rendererPosition:int = dataIndex%itsAmount;
				
				
				var result: String = (rendererPosition/3).toString().slice(0,1);
				if ((Number(result) % 2) == 0) {
					mamufas.setStyle('backgroundColor','0xFFFFFF');
				} else {
					mamufas.setStyle('backgroundColor','0xF5F5F5');
				}
				
            }
            
            
            /*override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
			     super.updateDisplayList(unscaledWidth, unscaledHeight);
			     
			 	 if(TileList(owner).isItemSelected(data)) {
			 	 	if (TileList(owner).isItemHighlighted(data)) {
						TweenMax.to(overCanvas, .3, {autoAlpha:1});
				     } else {
				     	TweenMax.to(overCanvas, .3, {autoAlpha:0});
				     }
				 }
				 else {
				 	 if (TileList(owner).isItemHighlighted(data)) {
						TweenMax.to(overCanvas, .3, {autoAlpha:1});
				     } else {
				     	TweenMax.to(overCanvas, .3, {autoAlpha:0});
				     }
				 }
			} */
			

			private function handleOver(e:MouseEvent):void{
				if (!addedItem && !pa.isSelectedForDownload){
					TweenMax.to(overCanvas, .3, {autoAlpha:1});
				}
			}
			
			private function handleOut(e:MouseEvent):void{
					TweenMax.to(overCanvas, .3, {autoAlpha:0});
			}		
			
			private function onAddedClick():void {
				MyEventDispatcher.selectPaForDownload(pa);
				TweenMax.to(overCanvas, .2, {autoAlpha:0});
				addedItem = true;
			}
			
		]]>
	</mx:Script>
	<mx:Canvas left="5" right="5" top="0" bottom="0" id="mamufas">
		<mx:Label id="area" y="7" text="{pa.name}" color="{(pa.isSelectedForDownload)?0xdddddd:0x666666}" fontWeight="normal" fontFamily="Helvetica" fontSize="13" textAlign="left" left="2" width="180"/>
		<mx:Label id="country" y="22" text="{pa.country}" color="{(pa.isSelectedForDownload)?0xdddddd:0x999999}" fontWeight="normal" fontFamily="Helvetica" fontSize="11" fontStyle="normal" textAlign="left" left="2" width="130"/>
		<mx:Label id="addedLabel" x="152" y="22" text="added" color="#339900"
			visible="{pa.isSelectedForDownload}" fontWeight="normal" fontFamily="Helvetica" fontSize="11" fontStyle="normal"/>
		<mx:HRule left="0" right="0" strokeColor="#e3e3e3" strokeWidth="1" bottom="0"/>
	</mx:Canvas>
	
	<mx:Canvas id="overCanvas" width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off"
		backgroundColor="#333333" borderStyle="solid" borderColor="#000000"
		cornerRadius="2" visible="false" alpha="0">
		<mx:Label x="7" y="5" text="{pa.name}" color="#FFFFFF" fontWeight="normal" fontFamily="Helvetica" fontSize="13" width="{(status!='')?140:180}" textAlign="left"/>
		<mx:Label x="7" y="21" text="{pa.country}" color="#FFFFFF" fontWeight="normal" fontFamily="Helvetica" fontSize="11" fontStyle="normal" width="140" textAlign="left"/>		
		<components:ShadowButton label="ADD" styleName="greenButton" height="18" top="5" right="7" paddingTop="2" 
			width="45" mouseChildren="false" useHandCursor="true" buttonMode="true" click="onAddedClick()"/>
	</mx:Canvas>
	
</mx:Canvas>