<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" xmlns:components = "com.vizzuality.components.*"
	 verticalScrollPolicy="off" horizontalScrollPolicy="off" click="handleClick()" height="65"  backgroundSize="100%">

	<mx:Script>
		<![CDATA[
			import com.ninem.controls.treebrowserclasses.TreeBrowserList;
			import com.ninem.controls.TreeBrowser;
			import gs.TweenLite;
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import com.vizzuality.components.FlickrImage;
			
			[Bindable]private var taxon:String;
			[Bindable]private var children_number: String;
            [Bindable]private var bool:Boolean;
			[Bindable]private var commonName:ArrayCollection;
			[Bindable]private var type: String;
			
			[Bindable] public var treeBrowserParent:TreeBrowser;
			
			[Embed(source="com/vizzuality/assets/click.jpg")]
   			[Bindable]
   			public var backgroundItem:Class;
   			
   			[Embed(source="com/vizzuality/assets/clickLast.jpg")]
   			[Bindable]
   			public var lastItem:Class;
			
			[Embed(source="com/vizzuality/assets/normal.jpg")]
   			[Bindable]
   			public var normalItem:Class;
   			
   			[Embed(source="com/vizzuality/assets/hover.jpg")]
   			[Bindable]
   			public var hoverItem:Class;

			[Embed(source="com/vizzuality/assets/itemCanvasRepeat.png")]
   			[Bindable]
   			public var itemCanvas:Class;
			
			[Embed(source="/com/vizzuality/skin/general.swf",symbol="bkgRowGreen")]
			[Bindable]
   			public var greenCanvas:Class;
			
			[Embed(source="/com/vizzuality/skin/general.swf",symbol="bkgRowGrey")]
			[Bindable]
   			public var grayCanvas:Class;
			
			[Embed(source="/com/vizzuality/skin/general.swf",symbol="bkgRowDarkGrey")]
			[Bindable]
   			public var grayDarkCanvas:Class;
			
			private var object: Object;
		
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
			     super.updateDisplayList(unscaledWidth, unscaledHeight);
			     
			 	 if(TreeBrowserList(owner).isItemSelected(data)) {
			 	 	if (TreeBrowserList(owner).isItemHighlighted(data)) {
						setStyle("backgroundImage",greenCanvas);
			     		specieLabel.setStyle('color', 0xFFFFFF);
		            	specieGroup.setStyle('color', 0xFFFFFF);
				     } else {
					 	if (parseInt(children_number)==0 || type=="species") {
					 		setStyle("backgroundImage",greenCanvas);
					 	} else {
						 	setStyle("backgroundImage",grayDarkCanvas);
					 	}
				     	specieLabel.setStyle('color', 0xFFFFFF);
		             	specieGroup.setStyle('color', 0xFFFFFF);
				     }
				 }
				 else {
				 	 if (TreeBrowserList(owner).isItemHighlighted(data)) {
						setStyle("backgroundImage",greenCanvas);
				     	specieLabel.setStyle('color', 0xFFFFFF);
			            specieGroup.setStyle('color', 0xFFFFFF);
				     } else {
				     	setStyle("backgroundImage",grayCanvas);
						specieLabel.setStyle('color', 0x666666);
						specieGroup.setStyle('color', 0x666666);
				     }
				 }
			}  


           	public override function set data(value:Object):void{
                super.data = value;
                if(value == null){
                	taxon="";
                	children_number = '';
                	flickrImg.source=null;
                	bool=false;
                	type='';
                    return;
                }
                

           		if(value.labelField != taxon) {   	
	                taxon = value.labelField;
	                children_number = value.number_children;
					//flickrImg.query=taxon;
                	flickrImg.query=value.imageURL;
	                bool = value.has_children;
	                type = value.type;
               	}
                
                
                	
            }
                
            private function doEffect():void{
            	TweenLite.to(this,.5,{alpha:1});	 
            }
            private function changeCombo(ev: Event):void {
            	Application.application.comboDefault = ev.target.selectedIndex;
            }
            
            private function handleClick():void{
            	var ev: Event = new Event("loadingFinish",true);
				dispatchEvent(ev);
				parent.parent.parent.addEventListener("loadingFinish",onLoadingEnds);
				loading.visible = true;
            }
            
            private function onLoadingEnds(ev: Event):void {
            	parent.parent.parent.removeEventListener("loadingFinish",onLoadingEnds);            	
            	loading.visible = false;
            }
		]]>
	</mx:Script>
	
	<mx:Canvas id="mamufas" backgroundColor="#FFFFFF" left="7" width="52" top="7" height="52" visible="{(taxon == 'Load more...')? false : true}">
	 	<components:FlickrImage id="flickrImg" left="3" horizontalAlign="center" verticalAlign="middle" top="3" width="46" height="46"/>
	</mx:Canvas>
    <mx:Label id="specieLabel" text="{taxon}" textAlign="left" verticalCenter="{(taxon == 'Load more...')? -4 : -9}" left="{(taxon == 'Load more...')? 30 : 65}" fontSize="{(taxon == 'Load more...')? 20 : 14}" width="135" height="23" fontFamily="DINOT-Medium" color="#666666"/>
    <mx:Label id="specieGroup" text="{(parseInt(children_number)>0)?Application.application.nf.format(parseInt(children_number))+' groups': ''}" textAlign="left" verticalCenter="10" left="65" fontSize="12" width="135" 
    	height="23" fontFamily="DINOT-Medium" color="#666666" visible="{(taxon == 'Load more...')? false : true}"/>
	<mx:SWFLoader id="loading" right="15" verticalCenter="2" source="@Embed('/com/vizzuality/assets/loadAnimation2.swf')" width="15" height="15" visible="false"/>
   
</mx:Canvas>
