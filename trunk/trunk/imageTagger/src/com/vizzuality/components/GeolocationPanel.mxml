<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="344" height="443" xmlns:maps="com.google.maps.*"  
	alpha="1.0" backgroundColor="#4F4C4C" xmlns:components="com.vizzuality.components.*">
    
	<mx:Script>
	    <![CDATA[
	    	import mx.core.IFlexDisplayObject;
	    	import com.google.maps.Color;
	    	import mx.controls.Alert;
	    	import mx.managers.PopUpManager;
	    	import mx.collections.ArrayCollection;
	    	import com.vizzuality.dao.DataAccessObject;
		    import com.google.maps.controls.MapTypeControl; 
	        import com.google.maps.controls.PositionControl; 
	        import com.google.maps.controls.ZoomControl; 
	        import com.google.maps.LatLng; 
	        import com.google.maps.LatLngBounds; 
	        import com.google.maps.Map; 
	        import com.google.maps.MapMouseEvent; 
	        import com.google.maps.MapType; 
	        import com.google.maps.overlays.Marker; 
	        import com.google.maps.overlays.MarkerOptions; 
	        import com.google.maps.services.ClientGeocoder;
	        import com.google.maps.services.GeocodingEvent;
            import com.google.maps.services.GeocodingResponse;
            import com.google.maps.services.Placemark;


			[Bindable]public var animalName: String;
			[Bindable]public var animalPath: String;
		    
		    private var latitude: LatLng = new LatLng(0,0);
		    private var options:MarkerOptions = new MarkerOptions({draggable: true});
		    private var marker: Marker;  
		    private var dao: DataAccessObject = new DataAccessObject();

		    
		    private function onMapReady(event:Event):void {
		      	this.map.setCenter(new LatLng(40.1452892956766, -3.69140625), 1, MapType.PHYSICAL_MAP_TYPE);
		      	this.map.addEventListener(MapMouseEvent.CLICK, onMapClick);	
		      	map.addControl(new ZoomControl()); 
   				map.enableScrollWheelZoom();	   				      	
		      	refreshMarkers();
		    }
		    
		    public function refreshMarkers():void {	      			      	
		      	if (map.isLoaded()) {
		      				      		
			      	if (marker != null) {
			    		map.clearOverlays();
			    	}
			    			    	
 			    	dao.getLatitudes(animalPath);
			    	var arrayLatitudes: ArrayCollection = new ArrayCollection();
			    	arrayLatitudes = dao.dbResult;
			    	
			    	if (arrayLatitudes.length != 0 && arrayLatitudes[0].lat!=null) {
	   					marker = new Marker(new LatLng(Number(arrayLatitudes[0].lat),Number(arrayLatitudes[0].lon)),options);
	   					map.setCenter(new LatLng(Number(arrayLatitudes[0].lat),Number(arrayLatitudes[0].lon)), arrayLatitudes[0].zoom);
	   					map.addOverlay(marker);	
	   					changeStyle();
			    	}
		      	}
		      	
		    	
		    }
		    
		    private function onMapClick(event:MapMouseEvent):void {			    
			    latitude = event.latLng;
			    putMarker();
			    changeStyle();
		    }
		    
		    private function changeStyle():void {
			    if (marker != null) {
				    instructionsText.text="Click or move the marker to change the position";
				    instructionsText.setStyle("color","#fcfbfb");			    		  		    				    
   				}
			    
		    }
		    
		    private function putMarker():void {
   				if (marker == null) {
   					marker = new Marker(latitude,options);
   				} else {
	   				marker.setLatLng(latitude);				
   				}
				map.addOverlay(marker);
		    }
		    
		    private function saveGeolocation():void {
		    	if (marker == null) {
		    		Alert.show(" No Marker ");	
		    	} else { 
		    		var position: LatLng = marker.getLatLng();
		    		dao.updateLatitudes(position.lat().toString(),position.lng().toString(),map.getZoom(),animalPath);
		    		closeGeolocation();
		    	}
		    }
		    
		    private function closeGeolocation():void {
		    	(this.parent.parent.parent as TabNavigatorForm).closeForm();
		    }
		    
		    private function searchLocation():void {
		    	var geocoder:ClientGeocoder = new ClientGeocoder();
                geocoder.addEventListener(GeocodingEvent.GEOCODING_SUCCESS, geocoder_geocodingSuccess);
                geocoder.addEventListener(GeocodingEvent.GEOCODING_FAILURE, geocoder_geocodingFailure);
                geocoder.geocode(textSearch.text);

		    }
		    
		    private function geocoder_geocodingSuccess(evt:GeocodingEvent):void {
                var result:Placemark = GeocodingResponse(evt.response).placemarks[0];

                var box:Object = result.ExtendedData.LatLonBox;
                var pBbox:LatLngBounds = new LatLngBounds(new LatLng(box.north,box.west),new LatLng(box.south,box.east));
                							                
                map.setCenter(result.point,map.getBoundsZoomLevel(pBbox));
                latitude = result.point;
            }

            private function geocoder_geocodingFailure(evt:GeocodingEvent):void {
                Alert.show("Unable to geocode address: " + evt.name);
            }

			private function writeTextInput():void {
				if (textSearch.text=="Write your desired location") {
					textSearch.text='';
				}
			}
	    ]]>
	</mx:Script>
		
	<maps:Map id="map" mapevent_mapready="onMapReady(event)" height="319" 
    url="http://www.vizzuality.com" key="ABQIAAAAsIunaSEq-72JsQD5i92_2RRtyGR_26Vh_v-YP2taQZno1YdgrhQJzeuNLwYCMpo8VRY9mC5aAjXmbQ" y="54" right="10" left="10"/>
	<mx:Button  label="x" fillAlphas="[1.0, 1.0, 1.0, 1.0]" click="closeGeolocation()" right="10" width="30" cornerRadius="0" styleName="itemButton" top="5"/>
	<mx:Button label="Save &amp; close" click="saveGeolocation()" styleName="itemButton" right="10" bottom="5"/>
	<mx:TextInput x="10" id="textSearch" y="381" width="251" text="Write your desired location" color="#C5C9CA" backgroundColor="#656363" enter="searchLocation()"
		click="writeTextInput()" borderColor="#797A7B" fontWeight="bold"/>
	<mx:Button y="381" label="Search" click="searchLocation()" styleName="itemButton" right="10"/>
	<mx:HRule y="36" height="6" strokeColor="#373A3A" strokeWidth="1" right="10" left="10"/>
	<mx:Label x="10" y="9" text="Georeference your image" width="193" color="#DADDDD" fontSize="13"/>
	<mx:Canvas y="54" height="54" backgroundColor="#030000" backgroundAlpha="0.55" right="10" left="10">
		<mx:Canvas x="7" y="7" width="40" height="40" borderStyle="solid" borderThickness="0.3" borderColor="#FFFFFF" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:Image id="imageDisplay" source="{animalPath}" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle"/>
			<!--<components:CroppedImage pathImage="{animalPath}" verticalCenter="0" horizontalCenter="0"/>-->
		</mx:Canvas>
		<mx:Label id="displayName" x="55" y="10" text="{animalName}" fontSize="13" fontWeight="bold" color="#F0F7F8"/>
		<mx:Label id="instructionsText" x="55" y="27" text="Click to set the new position"  color="#D99494" fontWeight="bold" fontSize="9" width="249"/>
	</mx:Canvas>
	<mx:Button label="Search Location" fillAlphas="[1.0, 1.0, 1.0, 1.0]" fillColors="[#414141, #414141]" color="#C0C2C3" borderColor="#414141" themeColor="#414141" cornerRadius="0" styleName="itemButton" bottom="5" left="10"/>
</mx:Canvas>
