<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" minWidth="800" minHeight="600" xmlns:maps="com.google.maps.*">
<fx:Script>
	<![CDATA[
		import mx.events.FlexEvent;
		import com.google.maps.overlays.MarkerOptions;
		import com.google.maps.controls.MapTypeControl;
		import com.google.maps.controls.ZoomControl;
		import com.google.maps.LatLngBounds;
		import com.google.maps.overlays.Marker;
		import mx.controls.Text;
		import mx.collections.ArrayCollection;
		import com.adobe.serialization.json.JSON;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.http.mxml.HTTPService;
		import com.google.maps.MapType;
		import com.google.maps.LatLng;
		
		public var tweets:ArrayCollection = new ArrayCollection();
		
		public var bbox:LatLngBounds;
		private var flickrImage: FlickrImage = new FlickrImage();
		private var dictionary: Dictionary = new Dictionary();
			
		
		private function init():void {
			var externalDomains:Array=[
			"farm1.static.flickr.com",
			"farm2.static.flickr.com",
			"farm3.static.flickr.com",
			"farm4.static.flickr.com"];
			for each(var dom:String in externalDomains) {
			   Security.allowDomain(dom);
			   Security.loadPolicyFile("http://"+dom+"/crossdomain.xml");
			   var request:URLRequest = new URLRequest("http://"+dom+"/crossdomain.xml");
			   var loader:URLLoader = new URLLoader();
			   loader.addEventListener(IOErrorEvent.IO_ERROR,function(event:IOErrorEvent):void {
			   	trace("error");
			   });
			   loader.load(request);	
			}

			Security.loadPolicyFile("http://flickr.com/crossdomain.xml");
			map.setCenter(new LatLng(0,0),2,MapType.SATELLITE_MAP_TYPE);
			map.addControl(new ZoomControl());
			map.addControl(new MapTypeControl());
			bbox= new LatLngBounds();
			var srv:HTTPService = new HTTPService();
			srv.resultFormat = "text";
			srv.url="http://search.twitter.com/search.json?q=%23ebio+observation";
			srv.addEventListener(ResultEvent.RESULT,onResult);
			
			srv.send();
		}
		
		
		
		
		private function scientificSlice(str:String):String {
			var start: int;
			var end: int;
			var aux: String;

			start=str.indexOf("#",1);
			aux = str.substring(start);
			end=aux.indexOf(" ");
			return aux.substring(1,end-1);
		}
		
		private function getLatLon(str:String):LatLng {
			var point: LatLng;
			var start: int;
			var end: int;
			var lat: String;
			var lon: String;
			
			start=str.indexOf("/");
			end=str.indexOf(" ",start+2);
			lat=str.substring(start+1,end);
			
			lon=str.substring(end+1,end+10);
			
			point = new LatLng(parseFloat(lat),parseFloat(lon));
			return point;
		}

		
		private function addOnMap(point: LatLng):void {
			var options:MarkerOptions = new MarkerOptions({
								icon: new CustomIconSprite(),
								iconAlignment: MarkerOptions.ALIGN_BOTTOM,
								clickable:false
								});	    
								
			var m:Marker = new Marker(point,options);
			//bbox.extend(point);
		    map.addOverlay(m);
		}
		
		 private function returnTweetAge(created_at:String):String
                {
                        var time:Date = new Date();
                        var tp:Array; var year:int; var month:int; var date:int;
                        var hour:int; var minutes:int; var seconds:int; var timezone:int;
                        
                        if (created_at.match(/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z/g).length==1)
                        {
                                // match 2008-12-07T16:24:24Z
                                tp = created_at.split(/[-T:Z]/g);
                                year = tp[0];
                                month = tp[1];
                                date = tp[2];
                                hour = tp[3];
                                minutes = tp[4];
                                seconds = tp[5];
                                month--;
                        } 
                        else if (created_at.match(/[a-zA-z]{3} [a-zA-Z]{3} \d{2} \d{2}:\d{2}:\d{2} \+\d{4} \d{4}/g).length==1)
                        {
                                // match Fri Dec 05 16:40:02 +0000 2008
                                tp = created_at.split(/[ :]/g);
                                if (tp[1]=="Jan")
                                        month = 0;
                                else if (tp[1]=="Feb")
                                        month = 1;
                                else if (tp[1]=="Mar")
                                        month = 2;
                                else if (tp[1]=="Apr")
                                        month = 3;
                                else if (tp[1]=="May")
                                        month = 4;
                                else if (tp[1]=="Jun")
                                        month = 5;
                                else if (tp[1]=="Jul")
                                        month = 6;
                                else if (tp[1]=="Aug")
                                        month = 7;
                                else if (tp[1]=="Sep")
                                        month = 8;
                                else if (tp[1]=="Oct")
                                        month = 9;
                                else if (tp[1]=="Nov")
                                        month = 10;
                                else if (tp[1]=="Dec")
                                        month = 11;
                                
                                date = tp[2];
                                hour = tp[3];
                                minutes = tp[4];
                                seconds = tp[5];
                                timezone = tp[6];
                                year = tp[7];
                        }
                        
                        time.setUTCFullYear(year, month, date);
                        time.setUTCHours(hour, minutes, seconds);
                        
                        var currentTime:Date = new Date();
                        currentTime.setHours(currentTime.hours-1);
                        var diffTime:int = currentTime.getTime() - time.getTime();
                        var diff:Date = new Date();
                        diff.setTime(diffTime);
                        
                        
            var txt:String;
                        if(diff.date > 1)
                        {
                            txt = "days ago...";
                        }
                        else if(diff.hours > 0)
                        {
                        txt = diff.hours+"h ago";   
                        }
                        else if(diff.minutes > 0)
                        {
                        txt = diff.minutes+"m ago";
                        }
                        else if(diff.seconds > 0)
                        {
                        txt = diff.seconds+"s ago";
                        }
                        
                        return txt;
                }
                
		private function onResult(event:ResultEvent):void {
			var resOb:Object = JSON.decode(event.result as String);
			var i: int = 0;
			var image: FlickrImage = new FlickrImage();
			connectLabel.visible = false;
			
			for each(var t:Object in resOb.results) {
				if ((t.text as String).toLowerCase().indexOf("#ebio observation:")>=0) {
					i = i + 1;
					
					var tweet:Tweet = new Tweet();
					
					tweet.text = t.text;
					tweet.scientific_name = scientificSlice(t.text).replace("_"," ");	
					tweet.position = getLatLon(t.text);
					
									
					tweet.created_at = returnTweetAge(t.created_at);
					tweet.from_user = t.from_user;
					tweet.from_user_id = t.from_user_id;
					tweet.id = t.id;
					tweet.iso_language_code = t.iso_language_code;
					tweet.profile_image_url = t.profile_image_url;
					tweet.source = t.source;
					
					if (i<6) {	
						image.addEventListener(FlickrImageEvent.IMAGE_URL,getURLImage);
						image.query = tweet.scientific_name;
					} else {
						addOnMap(tweet.position);						
					}
					dictionary[tweet.scientific_name] = tweet.position;
					tweets.addItem(tweet);
					
				}

			}
			repeaterTweets.dataProvider=tweets;
			
			map.setCenter(bbox.getCenter(),map.getBoundsZoomLevel(bbox));
		}
		
		
		private function getURLImage(ev:FlickrImageEvent):void {
			if (ev.url!=null) {			
				var loader : Loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, createFlickrMarker,false,0,true);
				loader.load(new URLRequest(ev.url));
			}
		}
		
		
		private function createFlickrMarker(ev:Event):void {
		
			var bmd:BitmapData = Bitmap(ev.currentTarget.content).bitmapData;
			var bmd2:BitmapData = new BitmapData(58,58)
			var m:Matrix = new Matrix();
			m.scale(0.81,0.81);
			bmd2.draw(bmd,m);	
			var sp:Sprite= new Sprite();
			           sp.graphics.lineStyle(5,0xffcc00);
			           sp.graphics.beginFill(0xFFFFFF,0);
			           sp.graphics.drawRect(0,0,56,56);
			           sp.graphics.endFill();
			           bmd2.draw(sp);
			
			var iconBitmap:Bitmap= new Bitmap(bmd2);
			
/* 			var photo:Object = flickrDict[ev.target.loader];
			var latlng:LatLng = new LatLng(photo.latitude, photo.longitude);
			var photoUrl:String = "http://farm"+photo.farm+".static.flickr.com/"+photo.server+"/"+photo.id+"_"+photo.secret+"_m.jpg"; */
			     
			var x: Number = Math.random();
			var y: Number = Math.random();
			
			var latlng: LatLng = new LatLng(x,y);
		    var marker:Marker = new Marker(latlng, new MarkerOptions({draggable:false,icon: iconBitmap}));
	   	 	map.addOverlay(marker);
		      
		}
		 

		
	]]>
</fx:Script>
	<fx:Style source="TwitterClient.css"/>

	<maps:Map id="map" height="100%" width="100%" key="lala"  left="250" mapevent_mapready="init()"/>
	<s:Panel width="250" title="Tweets on Biodiversity" left="0" top="0" bottom="0" contentBackgroundColor="#393939" baseColor="#5B5B5B" color="#FEFEFE" fontFamily="Verdana" fontSize="11">
		<s:Rect width="235" height="23" x="7" y="8" radiusX="3" radiusY="3">
	        <s:fill>
	            <s:SolidColor color="#ffffff" />
	        </s:fill>
	    </s:Rect>
		<s:TextInput x="9" y="7" contentBackgroundColor="#FFFFFF" color="#858484" width="175" height="25" fontStyle="italic"/>
		<mx:Label x="188" y="9" text="search" fontSize="13" color="#2B2B2B" textDecoration="underline"/>        
		<s:DataGroup id="repeaterTweets" top="36" bottom="10" itemRenderer="TweetItem">
			<s:layout>
				<s:VerticalLayout gap="0"/>
			</s:layout>
		</s:DataGroup>
	</s:Panel>
	<s:TextArea id="connectLabel" text="Conecting server..." right="0" top="0" x="690" width="110" contentBackgroundColor="#ffffcc" height="20" fontSize="12"/>
	
</s:Application>
