<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="260" height="123"
	verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:ns1="com.vizzuality.view.overlaycomponents.*" xmlns:components="com.vizzuality.view.timeline.components.*" xmlns:filters="flash.filters.*">
	
	<mx:states>
		<mx:State name="OverGBIF">
			<mx:AddChild position="lastChild">
				<mx:Canvas x="150" y="56" width="102" height="51" backgroundColor="#000000" backgroundAlpha="0.71" cornerRadius="20">
					<mx:Text text="VIEW PROVIDERS" width="59.759995" height="39.2" textAlign="center" horizontalCenter="-1" verticalCenter="5" fontFamily="DINOT-Bold" color="#FFFFFF" letterSpacing="-1" leading="-3" fontSize="12"/>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
			import mx.states.SetStyle;
			import com.vizzuality.view.map.MapController;
			import mx.core.UITextField;
			import mx.core.UIComponent;
			import com.vizzuality.view.timeline.events.TimelineButtonEvent;
			import mx.collections.ArrayCollection;
			import com.vizzuality.services.DataServices;
			
			
			[Bindable] public var taxonObject: Object;
			private var _ev: TimelineButtonEvent;
			public var identity: int;
			[Bindable] public var visibleComp: Boolean = true;
			[Bindable] public var taxonCharts: ArrayCollection;	
			[Bindable] private var commonName:ArrayCollection;	
		
		
			public override function set data(value:Object):void{
				taxonObject = value;
				if (value.commonNameEnglish!=null) {
                		commonName = new ArrayCollection();
                		if (value.commonNameEnglish!=null) {
		                	commonName.addItem("[EN] " + value.commonNameEnglish);
		                } else {
		                	commonName.addItem("[EN]");
		                }
		                if (value.commonNameEnglish!=null) {
		                	commonName.addItem("[ES] " + value.commonNameSpanish);
		                } else {
		                	commonName.addItem("[ES]");
		                }
		                if (value.commonNameEnglish!=null) {
		                	commonName.addItem("[DE] " + value.commonNameGerman);
		                } else {
		                	commonName.addItem("[DE]");
		                }
		                if (value.commonNameEnglish!=null) {
		                	commonName.addItem("[FR] " + value.commonNameFreanch);
		                } else {
		                	commonName.addItem("[FR]");
		                }
		                combo.dataProvider=commonName;
		                combo.visible = true;
                		//BindingUtils.bindProperty(combo, "selectedIndex", treeBrowserParent,"comboDefault");
                	} else {
                		combo.visible = false;
                	}
			}
 			
 			private function onClickButton(ev: Event):void {							
				switch (ev.target.data as int) {
					case 1:	
						_ev = new TimelineButtonEvent(TimelineButtonEvent.INFORMATION_SPECIE);
						_ev.specieID = identity;
						dispatchEvent(_ev);
						break ;
					case 2:
						_ev = new TimelineButtonEvent(TimelineButtonEvent.INFORMATION_GBIF);
						_ev.specieID = identity;
						dispatchEvent(_ev);
						break ;
					default:
						_ev = new TimelineButtonEvent(TimelineButtonEvent.DELETE_SPECIE);
						_ev.specieID = identity;
						dispatchEvent(_ev);
				}
			}
			
			
			private function onClickVisible(ev: Event):void {
				_ev = new TimelineButtonEvent(TimelineButtonEvent.TIMELINE_VISIBLE);
				_ev.specieID = identity;
				if (ev.target is UITextField) {
					if (this.visCheck.selected) {
						visCheck.selected = false;
						combo.enabled = false;
						gbif.enabled = false;
						specie.alpha = 0.3;
						_ev.visible = false;					
					} else {
						gbif.enabled = true;
						combo.enabled = true;
						specie.alpha = 1;
						visCheck.selected = true;
						_ev.visible = true;					
					}
				} else {
					if (this.visCheck.selected) {
						gbif.enabled = true;
						combo.enabled = true;
						specie.alpha = 1;
						_ev.visible = true;					
					} else {
						gbif.enabled = false;
						combo.enabled = false;
						specie.alpha = 0.3;
						_ev.visible = false;					
					}
				}
				dispatchEvent(_ev);		
				trace(ev);			
			}
			
			private function getTaxonStyle(str: String):String{
				return DataServices.gi().statesStyles[str];
			}
			
			private function onMouseOver(event: MouseEvent):void{
				if (currentState=='' || currentState==null) {
					currentState='OverGBIF';
				}
			}
			
			private function onMouseOut(event: MouseEvent):void{
				if (currentState=='OverGBIF') {
					currentState=null;
				}
			}

		]]>
	</mx:Script>

	<mx:CheckBox
		toolTip="Maximize/Minimize the info component"
		 id="visCheck" height="19" click="onClickVisible(event)" selected="{visibleComp}" right="26" top="8" width="12.4"/>
	<mx:Label id="specie" text="{taxonObject.name as String}" left="6" color="#333333" fontFamily="DINOT-Medium" 
		mouseOut="MapController.gi().highlightSpeciesOff(identity)"
		mouseOver="MapController.gi().highlightSpeciesOn(identity)" 
		fontSize="16" click="onClickVisible(event)" toolTip="" alpha="{(visibleComp)?specie.alpha=1:specie.alpha=0.3}" top="6" width="189" letterSpacing="-1"/>
	<mx:ComboBox id="combo" textAlign="left" left="6" fontSize="12" fontStyle="DINOT-Medium" color="#5D5A5A" height="22" 
		fillAlphas="[0.0, 0.0, 0.0, 0.0]" styleName="lenguageDark" right="65" top="28" letterSpacing="-1" fontWeight="normal"/>
	<mx:Button 
		toolTip="Remove this species from the map"
		id="del" width="14" height="14" right="10" styleName="btnDelete" mouseChildren="false" buttonMode="true" useHandCursor="true" data="3" click="onClickButton(event)" top="10"/>
	<mx:Button id="gbif" 
		toolTip="Show/Hide the GBIF network data layer"
		 click="MapController.gi().toggleGbifLayer(identity);(MapController.gi().gbifLayersActive[identity])?event.target.selected=false:event.target.selected=true;"
		width="14" height="14" right="43" styleName="btnGbif" mouseChildren="false" buttonMode="true" useHandCursor="true" data="2" enabled="{visibleComp}" top="10"/>
	<mx:VBox verticalGap="-5" top="53" bottom="3" left="15" width="132">
		<mx:Repeater id="myRepeater" dataProvider="{taxonCharts}">
			<mx:HBox verticalAlign="middle" horizontalGap="-1">
				<components:Circle data="{myRepeater.currentItem}" />		
				<mx:Label text="{(myRepeater.currentItem.status=='none')?'unknown':myRepeater.currentItem.status}" fontFamily="DINOT-Medium" fontSize="12" color="#898989"/>				
			</mx:HBox>
		</mx:Repeater>
	</mx:VBox>
	<mx:Canvas bottom="16" right="8" rollOver="{onMouseOver(event)}" rollOut="{onMouseOut(event)}" mouseChildren="false">
		<mx:Image scaleContent="false" source="@Embed('/com/vizzuality/style/assets/gbifRecords.png')"/>
		<mx:Label text="{gbifRecords.text}" fontFamily="DINOT-Bold" fontSize="25" color="#ce4e53" letterSpacing="-3" x="-1" textAlign="right" width="96" y="0"/>		
		<ns1:GbifTaxonNumberOccurrences id="gbifRecords" gbifTaxonId="{taxonObject.gbif_id as Number}" fontFamily="DINOT-Bold" fontSize="25" 
			color="#FFFFFF" letterSpacing="-3" x="0" textAlign="right" width="96" y="1"/>
		<mx:Label text="GBIF RECORDS" fontFamily="DINOT-Medium" fontSize="12" color="#F5F4F4" y="29" x="17" letterSpacing="-1" textAlign="right" width="79"/>		
	</mx:Canvas>
	
	<mx:Image scaleContent="false" y="3" width="120" rotation="90" x="260">
		<mx:source>@Embed('/com/vizzuality/style/assets/hRuleDashed500.png')</mx:source>
	</mx:Image>
</mx:Canvas>
